I"p<p>Quando você utiliza muitos containers <strong>Docker</strong> em seu dia a dia para diversos programas diferentes, containers antigos podem ficar “pendurados”, juntando poeira e acumulando espaço em seu disco. Ou então você pode querer acessar a <code class="language-plaintext highlighter-rouge">shell</code>, mais conhecida como linha de comando, mas não consegue decorar qual comando utilizar?</p>

<h2 id="listas-de-comandos-para-você-não-precisar-mais-acessar-o-google">Listas de comandos para você não precisar mais acessar o Google</h2>

<h3 id="docker">Docker</h3>

<ul>
  <li><strong>Parar todos containers ativos</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker stop <span class="si">$(</span>docker ps <span class="nt">-a</span> <span class="nt">-q</span><span class="si">)</span>
</code></pre></div></div>

<ul>
  <li><strong>Deletar todos containers</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker <span class="nb">rm</span> <span class="si">$(</span>docker ps <span class="nt">-a</span> <span class="nt">-q</span><span class="si">)</span>
</code></pre></div></div>

<ul>
  <li><strong>Apagar todas imagens</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker rmi <span class="nt">-f</span> <span class="si">$(</span>docker images <span class="nt">-a</span> <span class="nt">-q</span><span class="si">)</span>
</code></pre></div></div>

<ul>
  <li><strong>Informações detalhadas sobre um object Docker</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker inspect &lt;CONTAINER ID&gt;
</code></pre></div></div>

<ul>
  <li><strong>Remove objetos Docker não usados (containers, imagens, redes e volumes)</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker system prune
</code></pre></div></div>

<ul>
  <li><strong>Remove apenas os containers parados</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker <span class="nb">rm</span> <span class="si">$(</span>docker ps <span class="nt">-aq</span> <span class="nt">-f</span> <span class="nv">status</span><span class="o">=</span>exited<span class="si">)</span>
</code></pre></div></div>

<h3 id="docker-compose">Docker Compose</h3>

<ul>
  <li><strong>Constrói a imagem de um container desconsiderando o cache</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose build <span class="nt">--no-cache</span> &lt;SERVICE NAME&gt;
</code></pre></div></div>

<ul>
  <li><strong>Acessa a shell de um container</strong>:</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose run <span class="nt">--rm</span> &lt;SERVICE NAME&gt; /bin/sh
</code></pre></div></div>

<h2 id="faixa-bônus">Faixa bônus</h2>

<p>Abaixo um simples e <strong>não</strong> otimizado <code class="language-plaintext highlighter-rouge">docker-compose.yml</code>, que utilizo no desenvolvimento deste blog:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s2">"</span><span class="s">3"</span>

<span class="na">services</span><span class="pi">:</span>
  <span class="na">jekyll-draft</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">jekyll/jekyll:latest</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">jekyll serve --watch --draft --livereload</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">4000:4000</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">.:/srv/jekyll</span>

  <span class="na">jekyll-dev</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">jekyll/jekyll:latest</span>
    <span class="na">command</span><span class="pi">:</span> <span class="s">jekyll serve --watch --trace --livereload</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">4000:4000</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">.:/srv/jekyll</span>
</code></pre></div></div>
:ET