var store = [{
        "title": "Introducao Codificacao Segura",
        "excerpt":"Novas leis, normas e regulamentações exigem maior responsabilidade das empresas quanto a segurança dos produtos fornecidos aos consumidores, o que exige maior consciência dos desenvolvedores, e equipes de segurança. Além disso os usuários possuem cada vez maior preocupação com a proteção de seus dados.      Segurança não é funcionalidade; Segurança não é produto; Segurança não é negociável.    Pilares da segurança da informação      Confidencialidade: Nível necessário de sigilo para cada tipo de informação que será consumida por pessoas, recursos ou processos.   Integridade: Consistência e confiabilidade dos dados.   Disponibilidade: Tempo e acessibilidade aos dados.      Resolver falhas de vulnerabilidade pode ser 15 vezes mais caro na fase de testes, e 6 vezes mais barato se feito na fase de análise anterior a implementação.    Arquitetura triplo A      Autenticação: Quem é o usuário?   Autorização: O que o usuário, uma vez que autenticado, pode fazer?   Auditoria: O que o usuário fez?   Riscos mais comuns      Ataques maliciosos   Falhas de sistemas   Falhas humanas   Medidas essênciais      Controles de acesso   Permissões de usuário   Criptografia   Conceitos básicos      Fraqueza: Código implementado de forma incorreta que pode ter como consequência falhas de segurança   Vulnerabilidade: Fraqueza com possibilidade de exploração por usuário malicioso   Mitigar: Implementação de controles com o objetivo de reduzir ou eliminar os riscos de potenciais ameaças   Atacante: Usuário malicioso que explora vulnerabilidades de um sistema   Ataque: Investida ofensiva em um determinado sistema   Ameaças: Potencial ataque   CVE: Lista de vulnerabilidades e exposições comuns link   CWE: Lista de fraquezas comuns encontradas em software, constantemente atualizada e categorizada link   Principais elementos de uma aplicação web   Abaixo temos os principais elementos passiveis de ataques:      Cliente: Onde o código é interpretado (Browser)   Servidor: Onde o código receberá requisições e devolverá respostas   Bancos de dados: Onde os dados são persistidos   Modelagem de ameaças   Visa identificar:      Ameaças;   Ataques;   Contra medidas;   Vulnerabilidades.   Redução da superfície de ataque   Território que pode ser explorado e conquistado pelo usuário malicioso.      Quais são as possíveis vulnerabilidades resultantes de dependências do sistema (inclusive as provenientes de terceiros)?   Atenção a comentários no código que podem expor informações que facilitarão ataques.   Princípio do privilégio mínimo   Forneça apenas os acessos e permissões mínimas, e necessárias para que o usuário possa realizar as suas atividades.   Um ambiente mais restrito, permite maior controle, onde e possibilita que sejamos mais proativos e menos reativos.   STRIDE   É um acrônimo criado pela Microsoft, auxilia na identificação de ameaças.                  Categoria       Tipo       Descrição                       Autenticação       Spoofing (falsificação)       O atacante tenta se passar por outra pessoa.                 Integridade       Tampering (violação)       O atacante tenta interceptar dados através de seu canal de transmissão para modificá-los.                 Não repúdio       Repudiation (repúdio)       O atacante consegue realizar qualquer ação na aplicação sem que seja identificado como executor das mesmas.                 Confidencialidade       Information Disclosure (divulgação de informações não autorizada)       O atacante consegue ler dados privados que são transmitidos ou armazenados                 Disponibilidade       Denial of Service (negação de serviço)       O atacante consegue impossibilitar o acesso de usuários legítimos a aplicação.                 Autorização       Elevation of Privilege (elevação de privilégios)       O atacante consegue elevar seu nível de acessos e permissões por vias não autorizadas.           Implementações práticas      Validação de entrada de dados: Verificar se os dados imputados pelo usuário estão no tipo e formato correto. Executada tanto no cliente quanto no servidor.   Autenticação: Algo que o usuário sabe, algo que o usuário possui ou algo que o usuário é.   Autenticação multi fator, bloqueio de contas e captcha   Protocolos de autenticação como Oauth, OpenId e SAML   Limitação para tentativas de autenticação   Gerenciamento de sessão   Logs de identificação de usuários e ações como login e logout   Prevenção a SQL injection   Mantenha as bibliotecas de terceiros atualizadas   Monitoramento de atividades suspeitas   Criptografia de dados sensíveis   Cuidado ao reportar mensagens de erro, para não fornecer informações valiosas a um usuário malicioso.   Transmitir senhas e chaves de sessão via TLS   Midleware entre aplicações   Ferramentas úteis      Sonar Cloud   Sonar Qube   Sonar Lint   Snyk   OWASP Top 10   12 factor app   Wazuh   SDLC   SIEM   Pre-commit Hooks   SAST   DAST   SCA   RASP   ASVS   Dependency Check   OWASP ZAP   OWASP Threat Dragon  ","categories": [],
        "tags": [],
        "url": "/introducao-codificacao-segura/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Você conhece a origem do \"Hello World!\"?",
        "excerpt":"Tradicionalmente, programas Olá, Mundo! são utilizados para demonstrações no desenvolvimento de programas, assim como para assegurar que tanto uma linguagem como o sistema operacional estão funcionando corretamente.   Geralmente estes programas são os primeiros desenvolvidos por novos programadores, porque mesmo com pouca ou nenhuma experiência são fáceis para se executar, e por sua simplicidade são utilizados para garantir que os componentes de uma linguagem (seu compilador, ambiente de desenvolvimento e tempo de execução) foram instalados corretamente.   Estes programas também são utilizados pelos hackers como prova de conceito de que um código arbitrário pode ser executado por meio de um exploit onde os designers do sistema não pretendiam que o código pudesse ser executado.   Outro uso popular do Olá, Mundo! é como base de comparação de tamanho do executável que a linguagem gera e quanta infraestrutura de suporte deve existir por trás do programa para que este seja executado.   Mas de onde, ou melhor, quando tudo isso começou?   Brian Kernighan, autor de um dos livros de programação mais lidos, “C Programming Language”, também criou Hello, World. Ele fez referência pela primeira vez a Hello World no predecessor do livro C Programming Language: A Tutorial Introduction to the Programming Language B publicado em 1973.   main( ) { extrn a, b, c; putchar(a); putchar(b); putchar(c); putchar(’!*n’); } 1 ’hell’; b ’o, w’; c ’orld’;   Infelizmente, Kernighan não consegue identificar com certeza quando ou por que escolheu as palavras “Olá, Mundo!”. Quando questionado sobre o que gerou a ideia do nome “Olá, Mundo” em uma entrevista para a Forbes Índia, ele disse que sua memória está turva.      “O que me lembro é que vi um cartoon que mostrava um ovo e um pintinho e o pintinho dizia:“ Olá, mundo ”.    E você, já escreveu seu Olá, Mundo! ou melhor, seu Hello, World! hoje?   def hello():   print('Hello World!')  ","categories": ["Programacao"],
        "tags": ["Python","Programação","Curiosidades"],
        "url": "/programacao/origens-do-hello-world/",
        "teaser": "/assets/images/covers/fallback-teaser.jpeg"
      },{
        "title": "Git: Manual de sobrevivência do iniciante",
        "excerpt":"O Git é um sistema de controle de versão distribuído, criado por Linus Torvalds, nada mais nada menos que o criador do linux. Um software que tem por objetivo gerenciar diferentes versões no desenvolvimento de um documento qualquer, comumente utilizado no desenvolvimento de software para controlar diferentes versões dos códigos fonte e de sua documentação.   Diferente das outras opções de sistemas similares como o CSV e SVN, a arquitetura do git é descentralizada, ou seja, não existe um repositório oficial, apesar de existir esta possibilidade, então em cada repositório incluindo o da maquina do contribuidor, existira uma cópia completa e funcional, permitindo a utilização das operações do Git sem a necessidade de estar online.   Quando se trata de trabalho em equipe, e a maior parte do tempo as equipes estarão trabalhando em paralelo, um sistema como o Git se torna mais do que essêncial, para que não hajam conflitos entre as alterações realizadas por cada colaborador.   Também é comum que no constante desenvolvimento dos projetos hajam alterações que comprometam o seu funcionamento, neste caso o Git permite que essas alterações sejam revertidas de maneira rápida e simples.   Como isso funciona?   O Git trabalha em uma estrutura de ramificações, onde cada alteração de código cria um novo ponto na ramificação atual, essas ramificações, mais conhecidas como branchs são criadas no desenvolvimento de novas funcionalidades, e baseadas em branchs já existentes.   Cada contribuidor faz uma cópia local do repositório remoto original e cria as modificações necessárias, essa cópia será enviada novamente para o repositório remoto.   Passos no fluxo de contribuição de um projeto utilizando Git:      Clonar o repositório para que uma cópia contendo todos os arquivos originais esteja disponível localmente.   git clone &lt;HTTPS ou SSH&gt;      Criar uma branch, onde podemos alterar os arquivos do projeto sem interferir nos arquivos originais   git branch &lt;nome da ramificação (branch)&gt; # Alterar para a ramificação criada git checkout &lt;nome da ramificação (branch)&gt;      Conforme vamos criando e modificando os arquivos, adicionamos essas modificações   git add -p      E as dividimos em commits, é importante que a descrição do commit seja objetiva e clara quanto ao motivo das alterações, remoções ou inclusões, porque ela ficará salva no histórico das alterações.   git commit   Caso seja necessário realizar alguma alteração posterior ao primeiro commit já realizado, é possível adicionar as novas alterações e utilizar o comando:   git commit --amend      Uma vez que todas alterações forem finalizadas, vamos enviar a nossa branch contendo todas as alterações de volta para o repositório remoto, para que ela fique disponível para os demais contribuidores do projeto poderem ver e alterar.   git push --set-upstream origin &lt;nome da ramificação (branch)&gt;   Caso você tenha adicionado alterações posteriores, basta utilizar o seguinte comando:   git push --force with lease           Então é aberto um Pull Request, onde você pede ao dono do repositório que suas contribuições sejam incluídas nele.            Geralmente após a revisão das modificações ser realizada por algum dos outros contribuidores, você pode dar o merge que atualizara o repositório original com as suas modificações.       Comandos mais utilizados   Iniciando um repositório   git init   Buscar e aplicar modificações do repositório remoto no repositório local   git pull --prune   A flag --prune deleta branchs locais cujas modificações já foram aplicadas na branch original. Algumas vezes essas modificações podem gerar conflitos que necessitam de interação humana para serem corrigidos.   Resetando um commit   git reset --soft HEAD~1   A flag --soft garante que as alterações desfeitas sejam preservadas. Após executar o comando, você encontrará as mudanças como modificações locais não confirmadas em sua cópia local.   Se você não quiser manter essas alterações, simplesmente use a flag --hard. Faça isso apenas quando tiver certeza de que não precisa mais dessas alterações.   git reset --hard HEAD~1   Removendo um arquivo da área de staging ou desfazendo um git add   git reset &lt;nome do arquivo&gt;   Rebase   As modificações que você está fazendo em sua branch local podem ficar defasadas em relação ao repositório remoto, então é possível alterar a base de sua ramificação local para a mais atual com o comando rebase.   git rebase origin/&lt;main branch&gt;   Histórico de commits:   git log --graph --all --decorate --oneline      log: Mostra o histórico de commits.   --all: Apresenta todas referências.   --graph: Cria uma representação gráfica do histórico de commits.   --decorate: Traz o nome da referência para cada commit mostrado.   --oneline: Esta é uma abreviação para --pretty=oneline --abbrev-commi.   Deletar branchs locais cujas modificações já foram aplicadas ao repositório remoto “master”   git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d      branch: Listar, criar ou deletar ramificações.   --merged: Ramificações as quais suas modificações já foram aplicadas ao repositório original.   |: Sequência de um ou mais comandos.   egrep: Mostrar linhas que correspondem a um padrão.   -d, --delete: Deletar ramificação.   Arquivar modificações   git stash   Mostrar diferenças entre as modificações armazenadas e a ramificação atual   git stash show -p      stash: Arquivar as alterações.   show: Mostrar as alterações arquivadas e suas diferenças em relação a ramificação original.   -p, --patch: Seleciona as diferenças entre o ponteiro HEAD e a branch atual.   Alterando o nome de uma branch local   git branch -m &lt;old-name&gt; &lt;new-name&gt;   Atualizar repositório local com o remoto incluindo tags   git pull --prune &amp;&amp; git fetch --tags --all --force &amp;&amp; git branch --merged | egrep -v \"(^\\*|main)\" | xargs --no-run-if-empty git branch --delete   Removendo arquivos não rastreados   git clean -f -d # remove untracked   O que é GitHub   Enquanto o Git é um sistema de versionamento, o GitHub é uma plataforma para criação de repositórios remotos Git, possibilitando que outras pessoas possam clonar esse repositório localmente, realizar alterações e enviar essas alterações de volta ao repositório remoto.   Alternativas      GitLab   BitBucket   Referências      Explain Shell   Stackoverflow - How to modify a specified commit?  ","categories": ["Git"],
        "tags": ["Git","Github","Iniciante","Comandos"],
        "url": "/git/git-manual-de-sobrevivencia-do-iniciante/",
        "teaser": "/assets/images/covers/git-log.jpeg"
      },{
        "title": "Como monitorar fluxos de negócios digitais",
        "excerpt":"Já faz algum tempo que venho trabalhado no desenvolvimento de monitoramentos, e quando digo monitoramentos a primeira imagem que costuma-se visualizar é a de diversos monitores com indicadores em tempo real, mensurando evoluções e declínios históricos, e o observador em sua busca de encontrar uma movimentação de uma linha tão acentuada que lhe chame a atenção. Já a segunda imagem é o monitoramento de métricas de infraestrutura, por exemplo, acompanhamento de logs de aplicação em ferramentas como LogEntries e Datadog ou a stack ELK.   O que eu realmente tenho feito não é nada disso, quero dizer, tem um pouco disso. O que monitoro são regras de negócio, em um provedor de serviços de pagamento, claro assim como em outros meios, precisamos garantir a integridade das informações e do comportamento de nossas ferramentas, afinal erros humanos são possíveis e prováveis, e dívidas técnicas de produto, inevitáveis.   Também não é necessário acompanhar a alteração das curvaturas em um monitor, temos uma aplicação interna construída em python, algo próximo de um agendador/orquestrador que irá disparar um alerta apenas quando for necessária a tomada de ação.   Hoje existem monitoramentos que verificam queda de conversão, comportamentos inesperados em outros players do fluxo de pagamentos, integridade de diversos serviços internos e fluxos financeiros. Mas a quais características devemos nos atentar para sermos eficientes?   Um monitoramento deve possuir um dono   Quando é encontrado algum problema, é necessário que haja uma pessoa, um time, ou times de pessoas responsáveis para soluciona-lo, se não é algo crítico que necessite de resolução ou que seja possível de resolver, não há motivo de tirar a atenção das pessoas de outras tarefas mais relevantes.   O problema monitorado precisa de um fluxo de resolução definido   Quando nos depararmos com um alerta, eu vou olhar para você, você vai olhar para mim e o que vamos fazer? Está não é a situação na qual queremos nos encontrar uma vez que sabemos o que estamos procurando, é bem provável que se existe um alerta já tenhamos presenciado o cenário do problema anteriormente.   Um monitoramento deve se atentar apenas a um único problema   Quanto mais problemas tentamos cercar em um único monitoramento, ou módulo responsável pela busca de problemas, maior a complexidade, dificuldade de manutenção, revisão e entendimento, não precisamos procurar pelo problema dentro do alerta quando no olho do furacão, não é mesmo? Quanto mais claro e explicito melhor!   Foco na performance   A ferramenta que você utiliza é performática o suficiente para conseguir buscar pelo problema que você está buscando? Ela consegue percorrer o volume de dados necessário, e também no tempo necessário para que as pessoas certas sejam mobilizadas para atacar o prolema antes que ele se torne crítico, ou não seja mais passível de solução?   Assertividade   Você conhece a história do menino e lobo? Havia um menino que morava com sua familia nas entranhas bosque, onde habitavam alguns animais selvagens. Certo dia esse menino resolveu pregar uma peça em seu irmão mais velho, adentrou em meio as arvores e gritou:   \"Socorro, socorro, há um lobo tentando me devorar!\"   Seu irmão empunhou um machado e correu em sua direção, mas para a sua surpresa não havia lobo algum. O menino então caiu na gargalhada e essa cena se repetiu mais algumas vezes, até que seu irmão não mais apareceu, mas o lobo faminto sim.   Em algum momento a alta incidência de falsos positivos fará com que os alertas percam a credibilidade e não recebam a devida atenção.   Por onde começar?      Entenda o real problema por qual você está buscando, uma vez que tenha isso claro fica fácil de encontra-lo uma vez que aparecer.   Garanta que o problema tenha um dono, responsável pela resolução.   Faça uma análise histórica para definir que de fato, os gatilhos que irão disparar o alerta serão assertivos. Muitas vezes estática básica pode ser uma solução simples e eficiente.   Teste, faça mocks e se assegure que tudo está funcionando corretamente antes de ir para produção, uma revisão também é sempre bem vinda, e também necessária.   Garanta que as pessoas certas, estão recebendo os alertas no momento certo.   Atente-se a edge cases, muitas vezes eles vão intervir na incidência tanto de falsos positivos como falsos negativos.   Faça um acompanhamento da efetividade dos alertas, extraia métricas, verifique se os resultados foram os esperados, assim como os problemas detectados com uma baixa incidência de falsos positivos.   Pense em escala, em algum momento poderá haver diversos problemas mapeados e a sua ferramenta pode não suportar buscar por todos eles.   Peça feedbacks dos consumidores dos monitoramentos, algum fluxo pode ter sido alterado e seu monitoramento precisará de uma atualização.   Não se esqueça que as visualizações de indicadores são complementares aos alertas, e também são ferramentas muito úteis para auxiliar o usuário final na investigação.  ","categories": ["Telemetria"],
        "tags": ["Monitoramento","Python"],
        "url": "/telemetria/como-monitorar-fluxos-digitais/",
        "teaser": "/assets/images/covers/alert.jpeg"
      },{
        "title": "Como instalar Docker e Docker Compose no Raspberry Pi",
        "excerpt":"O Docker é bastante utilizado no mundo de desenvolvimento de software, com ele é possível virtualizar a mesma infraestrutura de sua máquina, em qualquer ambiente que aceite containers Docker. Basicamente podemos criar uma rede de máquinas virtuais isoladas logicamente do host, permitindo a representação fiel tanto em modo de desenvolvimento, quanto em modo de produção.   Para os desenvolvedores, não há mais a desculpa “mas na minha máquina funcionou! Deve ser algum problema na sua…”.   Além da segurança, qual é a vantagem desse isolamento?   O Docker permite a exclusão de seus containers e imagens sem que isso afete qualquer outro componente da maquina em que está instalado.   Instalando o Docker      Atualize o sistema   sudo apt-get update &amp;&amp; \\ sudo apt-get upgrade      Instale os pré requisitos   sudo apt-get install apt-transport-https ca-certificates software-properties-common -y      Baixe e instale o Docker   curl -fsSL get.docker.com -o get-docker.sh &amp;&amp; sh get-docker.sh      Depois da instalação, é necessário adicionarmos o usuário pi ao grupo docker, para podermos executar imagens sem sudo   sudo usermod -aG docker pi      Importe a chave GPG   sudo curl https://download.docker.com/linux/raspbian/gpg      Configure o repositório Docker      Abra o arquivo com o editor de texto   vim /etc/apt/sources.list      Adicione a linha   deb https://download.docker.com/linux/raspbian/ stretch stable      Habilite o Docker para executar sempre que o sistema for iniciado   sudo systemctl enable docker      Reinicie o sistema para que as alterações tenham efeito   sudo reboot -h now      E verifique se tudo deu certo com o comando abaixo:   sudo docker run --rm hello-world   Instalando o Docker Compose      Instalando as dependências necessárias   sudo apt update &amp;&amp; \\ sudo apt install -y python3-pip libffi-dev      Instalando o Docker Compose   sudo pip3 install docker-compose   Observações   Dependendo da arquitetura do modelo, e do sistema operacional instalado no Raspberry Pi você terá que utilizar imagens ARM, no caso do python por exemplo:   FROM arm32v7/python:3.7-slim-buster  ","categories": ["Python"],
        "tags": ["Python","Docker","RaspberryPi"],
        "url": "/python/como-instalar-docker-docker-compose-raspberrypi/",
        "teaser": "/assets/images/covers/docker-pi.jpeg"
      },{
        "title": "Docker, eliminando a procura diária por esses comandos no Google.",
        "excerpt":"Quando você utiliza muitos containers Docker em seu dia a dia para diversos programas diferentes, containers antigos podem ficar “pendurados”, juntando poeira e acumulando espaço em seu disco. Ou então você pode querer acessar a shell, mais conhecida como linha de comando, mas não consegue decorar qual comando utilizar?   Listas de comandos para você não precisar mais acessar o Google   Docker      Parar todos containers ativos:   docker stop $(docker ps -a -q)      Deletar todos containers:   docker rm $(docker ps -a -q)      Apagar todas imagens:   docker rmi -f $(docker images -a -q)      Informações detalhadas sobre um object Docker:   docker inspect &lt;CONTAINER ID&gt;      Remove objetos Docker não usados (containers, imagens, redes e volumes):   docker system prune      Remove apenas os containers parados:   docker rm $(docker ps -aq -f status=exited)   Docker Compose      Constrói a imagem de um container desconsiderando o cache:   docker-compose build --no-cache &lt;SERVICE NAME&gt;      Acessa a shell de um container:   docker-compose run --rm &lt;SERVICE NAME&gt; /bin/sh   Faixa bônus   Abaixo um simples e não otimizado docker-compose.yml, que utilizo no desenvolvimento deste blog:   version: \"3\"  services:   jekyll-draft:     image: jekyll/jekyll:latest     command: jekyll serve --watch --draft --livereload     ports:       - 4000:4000     volumes:       - .:/srv/jekyll    jekyll-dev:     image: jekyll/jekyll:latest     command: jekyll serve --watch --trace --livereload     ports:       - 4000:4000     volumes:       - .:/srv/jekyll  ","categories": ["Docker"],
        "tags": ["Docker","Jekyll"],
        "url": "/docker/docker-comandos-procura-diaria-google/",
        "teaser": "/assets/images/covers/docker-commands.jpeg"
      },{
        "title": "Como instalar Ubuntu server no RaspberryPi",
        "excerpt":"O Raspbian, na data desta publicação conhecido como Raspberry Pi OS, é um ótimo sistema operacional, contudo existem outras opções para instalarmos no Raspberry Pi e uma delas, sim senhoras e senhores, é o Ubuntu.   Abaixo um passo a passo da instalação e resolução de eventuais problemas que encontrei pelo caminho.   Ubuntu server 20.04 LTS      Donwload da imagem Ubuntu - Downloads   Gravar a imagem em um cartão SD, recomendo a utilização do Balena Etcher   Para configurar o wifi basta acessar arquivo network-config, remover o comentário das linhas e preencher com os dados de sua rede colocando tanto o nome da rede quanto a senha entre aspas (\")   #wifis: #  wlan0: #    dhcp4: true #    optional: true #    access-points: #      myhomewifi: #        password: \"S3kr1t\" #      myworkwifi: #        password: \"correct battery horse staple\"      Para problemas de distorção no display adicionar as seguintes linhas em seus respectivos arquivos:   No arquivo /system-boot/config.txt:   #/system-boot/config.txt  # uncomment if hdmi display is not detected and composite is being output hdmi_force_hotplug=1  # uncomment to force a specific HDMI mode (this will force VGA) hdmi_group=2 hdmi_mode=16  # uncomment to force a HDMI mode rather than DVI. This can make audio work in # DMT (computer monitor) modes hdmi_drive=2  # uncomment to increase signal to HDMI, if you have interference, blanking, or # no display config_hdmi_boost=4   e também no arquivo /system-boot/usercfg.txt:   # /system-boot/usercfg.txt dtoverlay=vc4-fkms-v3d           Insira o cartão SD em seu raspberrypi e para logar utilize ubuntu como forma de login e senha            para mudar configuração de teclado utilize o comando       sudo dpkg-reconfigure keyboard-configuration   Libs para python   sudo apt install build-essential libssl-dev libffi-dev python-dev   Desktop      Instalação:   sudo apt install lubuntu-desktop --fix-missing   Reinicie o sistema   sudo reboot -h now   Comandos      Verificando a temperatura:   paste &lt;(cat /sys/class/thermal/thermal_zone*/type) &lt;(cat /sys/class/thermal/thermal_zone*/temp) | column -s $'\\t' -t | sed 's/\\(.\\)..$/.\\1°C/'      Descobrindo IP com display:     hostname -I on raspberyy terminal      Desligando graciosamente:   sudo shutdown -h now   ou   sudo poweroff   Referências      Raspberrypi.org - IOS ssh   Iot4Beginners   Screen distortion during install ubuntu server   Weird display   Temperature Monitoring  ","categories": ["raspberrypi","ubuntu"],
        "tags": ["ubuntu","raspberry","pi"],
        "url": "/raspberrypi/ubuntu/como-instalar-ubuntu-raspberry-pi/",
        "teaser": "/assets/images/covers/2020-11-26-como-instalar-ubuntu-raspberry-pi.jpg"
      },{
        "title": "Documentando casos de uso",
        "excerpt":"   Uma imagem vale mais que mil palavras.    Mas quando enfrentamos a necessidade de um detalhamento mais aprofundado sobre um tema, as vezes mil palavras, ou uma imagem não são suficientes.   Mas porque eu documentaria um diagrama?   As especificações dos casos de uso auxiliam na demonstração de como o sistema se comportará de fato mediante ao uso, o que complementa a visualização criada pelo diagrama.   Exemplos do que podemos documentar:      Atores e sua participação   Fluxos principais e alternativos   A documentação não substitui o diagrama de casos de uso, apenas explica através do texto o que não conseguimos descrever com imagens. Ela também auxiliará na validação de protótipos (telas que mostram interações entre os atores e sistema).   O que devo fazer antes de começar a escrever a documentação?           Enumerar todos os casos de uso, inserindo apenas as funcionalidades que serão de fato implementadas e suas prioridades;                                  Ator           Objetivo           Prioridade                                           Cliente           Consultar restaurantes           1                           Descreva possíveis erros que possam ocorrer antes de detalhar o que deve ser feito em cada cenário;   Descreva como o sistema deve reagir a cada falha de acordo com as regras de negócio;   Template de documentação   Não existe um padrão definido de documentação, contudo há campos muito comuns.   --- titulo: UC001 - Consulta de passagem aérea. &lt;!--  Identificador - Título do caso de uso (O mesmo utilizado no diagrama) --&gt; projeto: Sistema de viagens aéreas. &lt;!-- Nome do projeto -- &gt; ---  # Especificação de Caso de Uso  ---  ## Descrição  O cliente utiliza o sistema para consultar valores de passagens aéreas. &lt;!-- Breve descrição. --&gt;  ## Atores  &lt;!-- Listagem de atores. --&gt;  - Cliente (Primário) - Sistema (Secundário)  ## Pré-Condição  O usuário deve estar autenticado no sistema. &lt;!-- Cenário que nos levou a condição atual (Outro caso de uso que antecede este) --&gt;  ## Regras de negócio envolvidas em cada cenário  - **RN01** - Um cliente pode realizar apenas um cadastro por e-mail; - **RN02** - O usuário consegue acessar a sua conta apenas após confirmar o recebimento do e-mail.  _Cenário: Descrição clara e objetiva do contexto de existência de um caso de uso._  ## Fluxos  Descrição dos fluxos.  ### Principal:  Fluxo sem interrupções ou exceções, mais conhecido como _caminho feliz_.  _Apresenta relacionamentos do tipo **include**_  |                  Ator                  |                         Sistema                         | | :------------------------------------: | :-----------------------------------------------------: | | FP01 - Cliente insere destino de busca |                            -                            | |                   -                    |       FP02 - Receber destino de busca - **FE01**        | | FP03 - Cliente pressiona a tecla ENTER |                            -                            | |                   -                    | FP04 - Exibir a página \"Resultados da busca\" - **FA01** |  _FP: Fluxo Principal; FA: Fluxo Alternativo; FE: Fluxo de Exceção_  ### Alternativo  Traz uma ideia de uma regra de negócio que não conseguimos colocar no diagrama de casos de uso, onde o ator segue um caminho diferente do descrito no fluxo principal.  - **FA01** - Não há passagens disponíveis para a data informada, informar a indisponibilidade de datas, e exibir outros dias e horários.   a. Continuação do fluxo ...   b. Continuação do fluxo ...   c. Encerra caso de uso  ### Exceção  Fluxo que impede que o caso de uso seja concluído como falhas, inconsistência e erros inesperados.  _Apresenta relacionamentos do tipo **extend**_  - **FE01** - Destino desejado não é oferecido pela companhia.   a. Continuação do fluxo ...   b. Continuação do fluxo ...   c. Encerra caso de uso.  ## Pós-Condição  Algo que ocorre após a realização do caso de uso.  Ex: sair do sistema ou voltar ao menu principal.  ","categories": ["Documentacao"],
        "tags": ["Documentacao","Caso","Uso"],
        "url": "/documentacao/documentacao-de-casos-de-uso/",
        "teaser": "/assets/images/covers/documentacao-caso-uso.jpg"
      },{
        "title": "Melhorando a experiência do usuário",
        "excerpt":"Se o seu usuário está feliz, você está feliz!. A experiência do usuário é muito importante para redução de custos, e uma boa aceitação do produto.   A experiência do usuário não depende apenas da usabilidade, mas de como o usuário se sente quando esta usando seu produto, das ferramentas oferecidas e promoções.   Do que se trata a famosa UX?      “User Experience é tudo! É a forma com que você sente o mundo, é a forma como você experiencia a sua vida, é a forma como você experiencia um serviço, um aplicativo, um sistema de computador. Mas é um sistema. É tudo!” Don Norman.    O termo User Experience doi criado pelo Don Norman, que foi Vice-Presidente do grupo avançado de tecnologia da Apple.   Características da UX      Aprendizagem: O usuário deve ser capaz de cumprir tarefas simples assim que ele esta diante de seu produto.   Eficiência: Uma vez que o usuário tem conhecimento de como usar o seu produto, ele tem que fazer isso com agilidade.   Memorabilidade: Se o usuário já utilizou o seu produto anteriormente, ele deve lembrar e como fazer isto novamente.   Prevenção de erros: Uma boa usabilidade deve guiar o usuário, de forma a reduzir possíveis erros de utilização.   Garantir a satisfação do usuário: Se o seu usuário cumprir o seu objetivo, e de maneira simples ele voltará a utilizar o seu produto.   Menos é mais, as vezes muitas funciionalidades podem complicar a vida do usuário.   Como construir uma boa experiência para os usuários de seu produto?      Vamos nos colocar no lugar do outro, e entender o que o cliente e não eu desenvolvedor gostaria de ter no produto. Estude o consumidor. Quem é? O que faz? Onde habita?   Não precisa inventar moda, menos é mais! Tente simplificar ao invés de complicar a vida do usuário.   Faça testes para saber se funciona!   As 10 heurísticas de Nielsin   Jakob Nielsen é o pai da usabilidade.      Mantenha o usuário informado de onde ele está, o que está acontecendo e para onde ele vai.   Se mantenha próximo da realidade do usuário, principalmente na comunicação.   Guie o usuário sem restringi-lo (conforme as regras de negócio).   Mantenha consistência, padrões e previsibilidade para facilitar o entendimento das coisas.   Entenda como seu usuário pode errar, para evita que isso aconteça.   Deixe visíveis os caminhos percorridos para acessar as funcionalidades para facilitar a navegação.   Flexibilidade e eficiência de uso. Mais de uma forma para atingir o mesmo fim, agradando todos os gostos.   Mantenha o design simples e minimalista, apenas o necessário.   Ajude a reconhecer e consertar erros de maneira rápida e indolor. Mensagens simples com abstrações técnicas ajudam muito, obrigado.   Santa documentação Batman! Parece que ela nos segue onde quer que vamos. Ofereça toda informação necessária para o usuário usufruir do seu produto.   Arquitetura de informação   A arquitetura da informação organiza e categoriza todo conteúdo presente em seu produto.   Etapas para definição da arquitetura de informação           Inventário de conteúdo: Aqui é levantado e identificado todo conteúdo existente.            Auditoria de conteúdo: O conteúdo deve ser verificado para validar a sua utilidade.            Agrupamento de informações: O conteúdo deve ser agrupado por temas similares ou relacionados.            Taxonomia: Nomenclatura dada aos agrupamentos criados, que deve contemplar todo conteúdo do site.            Informações Descritivas: Definição de metadados úteis para gerar listas de conteúdo relacionado a outros componentes de navegação, que por sua vez, vão ajudar o usuário a encontrar o que está buscando.       Ferramentas úteis      Prototipação - Pencil Project   Artigos      The Ultimate Guide to Understating UX Roles   Manuais de design      Google   Apple  ","categories": ["UX"],
        "tags": ["UX","User","Experience","Usuario","Experiencia"],
        "url": "/ux/introducao-user-experience-ux/",
        "teaser": "/assets/images/covers/introducao-user-experience.jpg"
      },{
        "title": "Estimando orçamentos e cálculando custos de projetos",
        "excerpt":"Estimar os custos de um projeto não é das tarefas mais fáceis, nem sempre tudo sai como planejado. E quando o projeto está de fato pronto, ou até mesmo quando já se foi meio caminho andado, você sabe dizer qual o valor agregado sobre o que foi entregue?   Neste cenário a matemática é simples, mas não torna o processo menos complexo, ou as previsões 100% exatas. Porém com algum planejamento é possível minimizar possíveis perdas, mantendo os gastos controlados, sem eventuais surpresas ou impactos negativos no budget.   Processos do gerenciamento de custos:      Planejar   Estimar   Determinar   Controlar   Trindade de variáveis do projeto:      Cronograma   Custos   Escopo   Essas variáveis são interdependentes, por exemplo, para reduzir custos é necessário reduzir o escopo e/ou aumentar o tempo destinado ao projeto.   Planejar      Grupos de entregas, relacionadas a contas de controle, geralmente imputadas no ERP da instituição.   Unidades de medidas (horas, reais, etc)   Faixa de variação, ou seja, qual é a variação (para cima ou para baixo) aceitável no orçamento?   Estimar                  Tipo       Descrição       Variação                       Análises de make or buy       Vale mais a pena fazer internamente ou comprar?       -                 Análises de rent or buy       Vale mais a pena fazer alugar ou comprar?       -                 Estimativa de Magnitude       Fase conceitual, informação pouco detalhada.       -25% a +75%                 Estimativa Análoga       Comparação com projetos similares já realizados no passados que já foram concluídos.       -10% a +25%                 Estimativa de Orçamentação       Realizada para fins de obtenção de financiamento do projeto.       -10% a +25%                 Estimativa Definitiva       Após todas atividades definidas, de cada atividade até a soma do todo (bottom up).       -5% a +10%           Solicitar um alto valor de orçamento e gastar apenas metade não é necessáriamente bom, devido ao custo de oportunidade onde a quantia poderia ter sido empregada em um investimento, empregado em outro projeto, ou então a quantia pode ter sido fruto de um empréstimo gerando altas taxas de juros.   Determinar      Reserva de contingência (tempo e custo);   Linha de base = custos das atividades + reserva de contingência;   Reserva gerencial (riscos desconhecidos);   Orçamento = Linha de base + reserva gerêncial.   Se todo capital estivesse alocado em uma só carteira, poderia ser gasto sem controle ou critério.   Controle      GVA (Gerênciamento de Valor Agregado).   Manter sob limites aceitáveis os excessos de custos que não foram previstos.   Manter partes interessadas informadas.   Impedir mudanças não aprovadas.   Análise de valor agregados   Medindo o desempenho do projeto em tempo e dinheiro.      PV (Planned Value): Valor planejado a ser gasto com o projeto até então.   RC (Real Cost): Valor gasto até o momento com o projeto.   EV (Earned Value): Quanto o trabalho realizado realmente rendeu.   Exemplo:      Um pintor tem como tarefa pintar um muro, e para esta atividade foram estimadas 16 horas de duração, dividida em dois dias úteis de 8 horas cadas. Se considerarmos uma remuneração de R$10,00 por hora, teremos um valor total planejado de R$160,00. Vamos imaginar que o pintor trabalhou não 8, mas 10 horas ao final do primeiro dia, e pintou apenas 40% do muro.       Valor planejado = 8 horas x R$10,00/h = R$80,00   Custo real = 10 horas x R$10,00/h = R$100,00   Valor agregado= 0.4 x 16 = 6,4 horas x 10 reais/h = 64 reais, ou seja, o trabalho rendeu apenas 64 reais neste primeiro dia, enquanto que o esperado era R$80,00 (8h x R$10,00).   Se o andamento permanecer constante a atividade irá custar mais caro, porque precisará de mais horas de atividade e atrasará, considerando que a mesma jornada de 8 horas de trabalho seja mantida.           CV (Cost Variance): Variação absoluta entre progresso realizado e custo incorrido, mede-se por CV = EV - RC. Se o CV der um valor negativo, o custo está acima do planejado, ou seja, os gastos estão acima do orçamento, em caso de valor positivo, o custo estará abaixo do esperado.            SV (Schedule variance): Variação absoluta entre o progresso realizado e progresso planejado, mede-se por SV = EV - PV. Se o SV apresentar valor negativo, a atividade está atrasada, caso contrário adiantada.       Variação de Custo:   CV = EV - RC  CV = 0,4 * R$160,00 - 10h * R$10,00 = -36    Conclusão: Estamos acima do orçamento.   Variação de Prazo   SV = EV - PV  SV = 0.4 * R$160,00 - 8h * R$10,00 = -16    Conclusão: Estamos atrasados.   Utilizando índices:      CPI (Cost Performance Index): Onde acima de 1 representa que estamos abaixo do custo, abaixo de um que estouramos o orçamento. Quanto mais próximo de 1 melhor. CPI = EV / RC   CPI = EV / RC  CPI = 0.4 * R$160,00 / 10h * R$10,00 = 0,64    Conclusão: Estamos acima do orçamento.      SPI (Schedule Performance Index): Se o índice está abaixo de 1, significa que a entrega está atrasada, acima que estamos adiantados e quanto mais próximo de 1 mais perto do prazo exato. SPI = EV / PV.   SPI = EV / PV  SPI = 0.4 * R$160,00 / 8h * R$10,00 = 0,8    Conclusão: Estamos atrasados.   Métricas   Return of Investment (ROI)   Dentre diversos projetos, qualificar se o investimento vale a pena ou não?   ROI = ((Receita - investimento)/Investimento) x 100   Desta maneira podemos comparar dois ou mais projetos para, a partir de uma receita esperada, sabermos qual trará maior retorno.   Net Promoter Score   É uma metodologia de pesquisa de satisfação dos clientes.      De 0 a 10, o quanto você indicaria nosso serviço para algum amigo ou familiar?    Podemos classificar os respondentes em:                  Categoria       Nota       Descrição                       Promotores       9 ou 10       São clientes que muito provavelmente indicarão o seu serviço.                 Neutros       7 ou 8       Clientes relativamente satisfeitos, mas podem ceder a concorrência.                 Detratores       0 a 6       Clientes insatisfeitos que podem danificar a imagem do produto ou serviço.           Para obter o NPS SCORE é necessário subtrair o percentual de Detratores do percentual de Promotores e dividir o resultado por 100   O quer seria um bom NPS?:                  Classificação       Nota                       Excelência       71 a 100                 Qualidade       31 a 70                 Aperfeiçoamento       1 a 30                 Crítico       -100 a 0           Também é possível solicitar justificativa para a nota dada pelo consumidor.   Churn   O churn é uma métrica que diz a porcentagem de clientes que deixaram de consumir o produto ou serviço. Sua formula é cálculada a partir de uma janela, ou seja, um período onde se obtém a relação de clientes que abandonaram o produto ou serviço naquele período sobre o total de clientes consumidores no início do período.   Taxa de Churn = Clientes que deixaram de consumir o produto/serviço no mês / Número total de consumidores no início do mês   Para reduzir a taxa de churn podemos considerar as seguintes ações:      Alinhamento de expectativas;   Entrega de valor;   Boas experiências;   Atenção aos feedbacks;   Correção rápida de eventuais erros ou problemas.   Ferramentas      MS Project  ","categories": ["Projetos"],
        "tags": ["Custo","Projeto"],
        "url": "/projetos/custos-orcamento-projetos/",
        "teaser": "/assets/images/covers/custos-orcamento-projeto.jpg"
      },{
        "title": "Chromebook - Instalação Steam",
        "excerpt":"Adicionar arquitetura   sudo dpkg --add-architecture i386   Atualizar repositórios   sudo apt-get update   Instalar dependências   sudo apt install libgl1-mesa-dri:i386 \\                  libgl1-mesa-glx:i386  \\                  libc6:i386 \\                  libc6-i386 \\                  libgtk2.0-0:i386 \\                  libxtst6:i386   Baixar pacote de instalação steam   wget https://cdn.cloudflare.steamstatic.com/client/installer/steam.deb   Instalar Steam   sudo dpkg -i steam.deb   Desabilitar limite de frame rate   steam --disable-framerate-limit   Referências      chromeunboxed   askubuntu  ","categories": [],
        "tags": [],
        "url": "/recipes/chromebook-crostini-steam/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Chromebook - flags",
        "excerpt":"Suporte a aceleração GPU   chrome://flags/#crostini-gpu-support      Reinicie a maquina   Suporte a Hyper-Threading   https://support.google.com/chromebook/answer/9340236?hl=en   chrome://flags/#scheduler-configuration      Enables Hyper-Threading   Reinicie a maquina   Suporte a modo escuro      Sistema:   chrome://flags/#dark-light-mode      Conteúdo Web:   chrome://flags/#enable-force-dark      Reinicie a maquina   Abra a barra de configurações rápidas no desktop no canto inferior esquerdo e ative o tema escuro.   Melhor posicionamento do mouse e foco   chrome://flags/#exo-pointer-lock      Reinicie a maquina  ","categories": [],
        "tags": [],
        "url": "/recipes/chromebook-flags/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Borda",
        "excerpt":"Cor   &lt;!-- Head starts --&gt; &lt;style&gt;   .border-text {     border-color: rgb(7, 209, 64);     border-style: solid;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"border-text\"&gt;Some text&lt;/p&gt; &lt;!-- Body ends --&gt;   Raio   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .border-text {     border-style: solid;     border-radius: 10px;     padding: 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"border-text\"&gt;Some text&lt;/p&gt; &lt;!-- Body ends --&gt;   Arrendondada   &lt;!-- Head starts --&gt; &lt;style&gt;   .round-div-size {     width: 200px;     height: 200px;   }    .border {     border-style: solid;     border-radius: 50%;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"border round-div-size\"&gt;&lt;/div&gt; &lt;!-- Body ends --&gt;   Solida   &lt;!-- Head starts --&gt; &lt;style&gt;   .border-text {     border-style: solid;     padding: 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"border-text\"&gt;Some text&lt;/p&gt; &lt;!-- Body ends --&gt;   Largura   &lt;!-- Head starts --&gt; &lt;style&gt;   .border-text {     border-width: 10px;     border-style: solid;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"border-text\"&gt;Some text&lt;/p&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-border/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Cor",
        "excerpt":"Fundo   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .silver-background {     background-color: silver;   }    .square {     width: 200px;     height: 200px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"silver-background square\"&gt;&lt;/div&gt; &lt;!-- Body ends --&gt;   Sobrescrever   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .blue-text {     color: blue;   }    .red-text {     color: red;   }    .orange-text {     color: orange;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"blue-text\"&gt;Blue&lt;/p&gt; &lt;p class=\"blue-text red-text\"&gt;Blue&lt;/p&gt; &lt;p class=\"blue-text red-text orange-text\"&gt;Orange&lt;/p&gt; &lt;!-- Body ends --&gt;   RGB   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .rgb-background {     background-color: rgb(0, 0, 0);   }    .square {     width: 200px;     height: 200px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"rgb-background square\"&gt;&lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-color/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Flexbox",
        "excerpt":"Flexbox   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;   }    #box-1 {     background-color: dodgerblue;     height: 200px;     flex-basis: 10em;   }    #box-2 {     background-color: orangered;     height: 200px;     flex-basis: 20em;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Justify   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     background-color: grey;     /* Make possible to align elements to rows or columns, not both */     display: flex;     height: 500px;     justify-content: center;   }    #box-1 {     background-color: dodgerblue;     width: 25%;     height: 100%;   }    #box-2 {     background-color: orangered;     width: 25%;     height: 100%;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Order   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;   }    #box-1 {     background-color: dodgerblue;     order: 2;     width: 200px;     height: 200px;   }    #box-2 {     background-color: orangered;     order: 1;     width: 200px;     height: 200px;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Direction Row Reverse   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;     flex-direction: row-reverse;   }    #box-1 {     background-color: dodgerblue;     width: 50%;     height: 50%;   }    #box-2 {     background-color: orangered;     width: 50%;     height: 50%;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Grow   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;   }    #box-1 {     background-color: dodgerblue;     height: 200px;     flex-grow: 1;   }    #box-2 {     background-color: orangered;     height: 200px;     flex-grow: 2;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Shrink   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;   }    #box-1 {     background-color: dodgerblue;     width: 100%;     height: 200px;     flex-shrink: 1;   }    #box-2 {     background-color: orangered;     width: 100%;     height: 200px;     flex-shrink: 2;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Property   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;   }    #box-1 {     background-color: dodgerblue;     width: 100%;     height: 200px;     /* Flex grow, shrink and basis respectively */     flex: 2 2 150px;   }    #box-2 {     background-color: orangered;     width: 100%;     height: 200px;     flex: 1 1 150px;    } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Wrap   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #box-container {     background-color: silver;     height: 500px;     /* Make possible to align elements to rows or columns, not both */     display: flex;     /* It wraps elements to next line */     flex-wrap: wrap;   }    #box-1 {     background-color: palegoldenrod;     width: 25%;     height: 50%;   }    #box-2 {     background-color: palegreen;     width: 25%;     height: 50%;   }    #box-3 {     background-color: paleturquoise;     width: 25%;     height: 50%;   }    #box-4 {     background-color: palevioletred;     width: 25%;     height: 50%;   }    #box-5 {     background-color: orangered;     width: 25%;     height: 50%;   }    #box-6 {     background-color: burlywood;     width: 25%;     height: 50%;   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"box-container\"&gt;   &lt;div id=\"box-1\"&gt;&lt;/div&gt;   &lt;div id=\"box-2\"&gt;&lt;/div&gt;   &lt;div id=\"box-3\"&gt;&lt;/div&gt;   &lt;div id=\"box-4\"&gt;&lt;/div&gt;   &lt;div id=\"box-5\"&gt;&lt;/div&gt;   &lt;div id=\"box-6\"&gt;&lt;/div&gt;  &lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-flexbox/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Fontes",
        "excerpt":"Tamanho do texto   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .big-text {     font-size: 50px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"big-text\"&gt;Big Text!&lt;/p&gt; &lt;!-- Body ends --&gt;   Familia da fonte   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;!-- Google fonts import start --&gt; &lt;link   rel=\"preconnect\"   href=\"https://fonts.googleapis.com\" &gt; &lt;link   rel=\"preconnect\"   href=\"https://fonts.gstatic.com\"   crossorigin &gt; &lt;link   href=\"https://fonts.googleapis.com/css2?family=Poppins&amp;display=swap\"   rel=\"stylesheet\" &gt;  &lt;!-- Google fonts import end --&gt; &lt;!-- Style block start --&gt; &lt;style&gt;   .monospace {     font-family: monospace;   }    .poppins {     font-family: \"Poppins\";   } &lt;/style&gt; &lt;p class=\"monospace\"&gt;Monospace font family&lt;/p&gt; &lt;p class=\"poppins\"&gt;Poppins font family from Google Fonts&lt;/p&gt; &lt;!-- Body ends --&gt;   Fonte padrão   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;!-- Google fonts import start --&gt; &lt;!-- Google fonts import end --&gt; &lt;!-- Style block start --&gt; &lt;style&gt;   /* sans-serif will be used if Poppins not found  */   .fallback-font {     font-family: \"Poppins\", sans-serif;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p class=\"fallback-font\"&gt;Sans-serif font fallback if Poppins font not found&lt;/p&gt; &lt;!-- Body ends --&gt;   Google Fontes   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;!-- Google fonts import start --&gt; &lt;link   rel=\"preconnect\"   href=\"https://fonts.googleapis.com\" &gt; &lt;link   rel=\"preconnect\"   href=\"https://fonts.gstatic.com\"   crossorigin &gt; &lt;link   href=\"https://fonts.googleapis.com/css2?family=Poppins&amp;display=swap\"   rel=\"stylesheet\" &gt; &lt;!-- Google fonts import end --&gt; &lt;!-- Style block start --&gt; &lt;style&gt;   .poppins {     font-family: \"Poppins\";   } &lt;/style&gt; &lt;p class=\"poppins\"&gt;Poppins font family from Google Fonts&lt;/p&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-fontes/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Grid",
        "excerpt":"Grid   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Coluna   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;     /* Item 5 occupies position 2 until 4 of the grid */     grid-column: 2 / 4;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Linha   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;     /* Item 5 occupies column 2 until 4 of the grid */     grid-column: 2 / 4;     /* Item 5 occupies row 2 until 4 of the grid */     grid-row: 2 / 4;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Área   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;     /* Starts at line 1, column 1 and ends before line 2 and before column 4 */     /* 1 2 3 4 */     /* 1 */     /* 2 */     /* 3 */     /* 4 */     grid-area: 1/1/2/4;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Template area   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;     /* Positioning the item according to grid-template-areas naming*/     grid-area: head;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;     /* Template areas */     grid-template-areas:       \"head head head\"       \"main main main\"       \"footer footer footer\";   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Into grid   &lt;!-- index.html --&gt; &lt;!-- header starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;     grid-area: header;   }    .d2 {     background-color: lightsalmon;     grid-area: advert;   }    .d3 {     background-color: paleturquoise;     grid-area: content;     display: grid;     grid-template-rows: auto 1fr;   }    .ph1 {     background-color: palevioletred;   }    .ph2 {     background-color: palegreen;   }    .d4 {     background-color: lightpink;     grid-area: footer;   }     .p5 {     padding: 5px;   }    /* Default */   .container {     min-height: 300px;     width: 100%;     background-color: lightgrey;     font-size: 1.5em;     font-family: monospace;     padding: 5px;     display: grid;     /* Three columns */     grid-template-columns: 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 50px auto 1fr auto;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;     /* Template areas */     grid-template-areas:       \"header\"       \"advert\"       \"content\"       \"footer\";   }    @media (min-width: 300px) {     .container {       grid-template-columns: auto 1fr;       grid-template-rows: auto 1fr auto;       grid-template-areas:         \"advert header\"         \"advert content\"         \"advert footer\";     }   }    @media (min-width: 600px) {     .container {       grid-template-columns: auto 1fr;       grid-template-rows: auto 1fr auto;       grid-template-areas:         \"header header\"         \"advert content\"         \"advert footer\";     }   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- header ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;Header&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;Advert&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;     &lt;div class=\"ph1\"&gt;Paragraph 1&lt;/div&gt;     &lt;div class=\"ph2\"&gt;Paragraph 2&lt;/div&gt;   &lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;footer&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Repeat   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: repeat(3, 1fr);     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: repeat(2, 1fr);     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Repeat autofill   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     min-height: 100px;     padding: 10px;     background-color: lightgrey;     display: grid;     /* auto-fill dynamic number of columns according to page size */     /* minmax minimum and max number of grid element according to page size */     grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: repeat(3, 1fr);     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 10px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Repeat autofit   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     min-height: 100px;     padding: 10px;     background-color: lightgrey;     display: grid;     /* fit dynamic number of columns according to page size fitting the entire length of the container */     /* minmax minimum and max number of grid element according to page size */     grid-template-columns: repeat(auto-fit, minmax(90px, 1fr));     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: repeat(3, 1fr);     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 10px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-grid/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Imagem",
        "excerpt":"Imagem   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .smaller-image {     width: 300px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;p&gt;This is a random image from Unsplash&lt;/p&gt; &lt;a href=\"#\"&gt;&lt;img class=\"smaller-image\" src=\"https://source.unsplash.com/random\" alt=\"\"&gt;&lt;/a&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-image/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Inline",
        "excerpt":"Inline   &lt;!-- index.html --&gt; &lt;!-- Body starts --&gt; &lt;h1 style=\"color: blue\"&gt;Hello, world!&lt;/h1&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-inline/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Justificar",
        "excerpt":"Items   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;   }    .p5 {     padding: 5px;   }    .container {     justify-items: center;     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;   Self   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;   }    .d2 {     background-color: lightsalmon;     justify-self: center;   }    .d3 {     background-color: paleturquoise;   }    .d4 {     background-color: lightpink;   }    .d5 {     background-color: palegoldenrod;   }    .p5 {     padding: 5px;   }    .container {     font-size: 40px;     font-family: monospace;     width: 100%;     padding: 5px;     background-color: lightgrey;     display: grid;     /* Three columns */     grid-template-columns: 1fr 1fr 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 1fr 1fr;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;1&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;2&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;3&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;4&lt;/div&gt;   &lt;div class=\"p5 d5\"&gt;5&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-justify/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Margem",
        "excerpt":"Classes   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .no-margin {     border-style: solid;   }    .with-margin {     margin: 5px;     border-style: solid;   }    .with-negative-margin {     margin-left: -10px;     border-style: solid;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"no-margin\"&gt;No margin&lt;/div&gt; &lt;div class=\"with-margin\"&gt;With 5px margin&lt;/div&gt; &lt;div class=\"with-negative-margin\"&gt;With -10px margin left&lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-margin/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Média Query",
        "excerpt":"Media Query   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   /* Declare global variables in root */   :root {     --box-background-color: brown;   }    .box-background {     /* use --box-background-color variable if exists, else apply gay */     background-color: var(--box-background-color, gray);   }    .square {     width: 200px;     height: 200px;   }    @media (max-width: 600px) {     .square {       width: 50px;       height: 50px;     }   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"box-background square\"&gt;&lt;/div&gt; &lt;!-- Body ends --&gt;   Area Template   &lt;!-- index.html --&gt; &lt;!-- header starts --&gt; &lt;style&gt;   .d1 {     background-color: lightskyblue;     grid-area: header;   }    .d2 {     background-color: lightsalmon;     grid-area: advert;   }    .d3 {     background-color: paleturquoise;     grid-area: content;   }    .d4 {     background-color: lightpink;     grid-area: footer;   }     .p5 {     padding: 5px;   }    /* Default */   .container {     min-height: 300px;     width: 100%;     background-color: lightgrey;     font-size: 1.5em;     font-family: monospace;     padding: 5px;     display: grid;     /* Three columns */     grid-template-columns: 1fr;     /* Gap between columns */     /* column-gap: 5px; */     /* Two lines */     grid-template-rows: 50px auto 1fr auto;     /* Gap between rows */     /* row-gap: 5px; */     /* Gap between rows and columns */     gap: 5px 5px;     /* Template areas */     grid-template-areas:       \"header\"       \"advert\"       \"content\"       \"footer\";   }    @media (min-width: 300px) {     .container {       grid-template-columns: auto 1fr;       grid-template-rows: auto 1fr auto;       grid-template-areas:         \"advert header\"         \"advert content\"         \"advert footer\";     }   }    @media (min-width: 600px) {     .container {       grid-template-columns: auto 1fr;       grid-template-rows: auto 1fr auto;       grid-template-areas:         \"header header\"         \"advert content\"         \"advert footer\";     }   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- header ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"container\"&gt;   &lt;div class=\"p5 d1\"&gt;Header&lt;/div&gt;   &lt;div class=\"p5 d2\"&gt;Advert&lt;/div&gt;   &lt;div class=\"p5 d3\"&gt;Content&lt;/div&gt;   &lt;div class=\"p5 d4\"&gt;footer&lt;/div&gt; &lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-media-query/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Padding",
        "excerpt":"Padding   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .no-padding {     border-style: solid;     margin-bottom: 10px;   }    .with-padding {     padding: 5px;     border-style: solid;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"no-padding\"&gt;No padding&lt;/div&gt; &lt;div class=\"with-padding\"&gt;With 5px padding&lt;/div&gt; &lt;!-- Body ends --&gt;   Clockwise notation   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .clockwise-padding {     border-style: solid;     /* top right bottom left */     padding: 10px 20px 10px 20px   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"clockwise-padding\"&gt;No margin&lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-padding/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Seletores",
        "excerpt":"Class   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .red-text {     color: red   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;h1 class=\"red-text\"&gt;Hello, World!&lt;/h1&gt; &lt;!-- Body ends --&gt;   Id   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   #root {     color: green;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div id=\"root\"&gt;Hello, World!&lt;/div&gt; &lt;!-- Body ends --&gt;   Type   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   [type='radio'] {     margin: 20px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;label for=\"some-radio-button\"&gt;   &lt;input     type=\"radio\"     name=\"some-radio-button\"     id=\"some-radio-button\"     checked   &gt;   Selector Styling &lt;/label&gt; &lt;!-- Body ends --&gt;   Tag   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   h1 {     color: blue   } &lt;/style&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;h1&gt;Hello, World!&lt;/h1&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-selectors/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "CSS - Variáveis",
        "excerpt":"Local   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   .box {     --box-background-color: brown;   }    .box-background {     /* use --box-background-color variable if exists, else apply gay */     background-color: var(--box-background-color, gray);   }    .square {     width: 200px;     height: 200px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"box box-background square\"&gt;&lt;/div&gt; &lt;!-- Body ends --&gt;   Global   &lt;!-- index.html --&gt; &lt;!-- Head starts --&gt; &lt;style&gt;   /* Declare global variables in root */   :root {     --box-background-color: brown;   }    .box-background {     /* use --box-background-color variable if exists, else apply gay */     background-color: var(--box-background-color, gray);   }    .square {     width: 200px;     height: 200px;   } &lt;/style&gt; &lt;!-- Style block end --&gt; &lt;!-- Head ends --&gt; &lt;!-- Body starts --&gt; &lt;div class=\"box-background square\"&gt;&lt;/div&gt; &lt;!-- Body ends --&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/css-variables/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Docker, acesso ao host",
        "excerpt":"Acessando o host de um container docker.   172.17.0.1   ou   host.docker.internal   Referência      Stackoverflow - docker internal host  ","categories": [],
        "tags": [],
        "url": "/recipes/docker-internal-host/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Docker, sem sudo.",
        "excerpt":"Utilizando docker sem permissões root no linux.   Script      Cria grupo docker   Insere o usuário atual no grupo   Muda o grupo do usuário na sessão   Adiciona o usuário ao grupo   reinicia o Docker   sudo groupadd docker &amp;&amp; \\ sudo gpasswd -a $USER docker &amp;&amp; \\ newgrp docker &amp;&amp; \\ sudo usermod -aG docker $USER &amp;&amp; \\ sudo systemctl restart docker   ","categories": [],
        "tags": [],
        "url": "/recipes/docker-sem-sudo/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "GitHub - Emojis",
        "excerpt":"Lista de Emojis   Pessoas                  :bowtie: :bowtie:       :smile: :smile:       :laughing: :laughing:                       :blush: :blush:       :smiley: :smiley:       :relaxed: :relaxed:                 :smirk: :smirk:       :heart_eyes: :heart_eyes:       :kissing_heart: :kissing_heart:                 :kissing_closed_eyes: :kissing_closed_eyes:       :flushed: :flushed:       :relieved: :relieved:                 :satisfied: :satisfied:       :grin: :grin:       :wink: :wink:                 :stuck_out_tongue_winking_eye: :stuck_out_tongue_winking_eye:       :stuck_out_tongue_closed_eyes: :stuck_out_tongue_closed_eyes:       :grinning: :grinning:                 :kissing: :kissing:       :kissing_smiling_eyes: :kissing_smiling_eyes:       :stuck_out_tongue: :stuck_out_tongue:                 :sleeping: :sleeping:       :worried: :worried:       :frowning: :frowning:                 :anguished: :anguished:       :open_mouth: :open_mouth:       :grimacing: :grimacing:                 :confused: :confused:       :hushed: :hushed:       :expressionless: :expressionless:                 :unamused: :unamused:       :sweat_smile: :sweat_smile:       :sweat: :sweat:                 :disappointed_relieved: :disappointed_relieved:       :weary: :weary:       :pensive: :pensive:                 :disappointed: :disappointed:       :confounded: :confounded:       :fearful: :fearful:                 :cold_sweat: :cold_sweat:       :persevere: :persevere:       :cry: :cry:                 :sob: :sob:       :joy: :joy:       :astonished: :astonished:                 :scream: :scream:       :neckbeard: :neckbeard:       :tired_face: :tired_face:                 :angry: :angry:       :rage: :rage:       :triumph: :triumph:                 :sleepy: :sleepy:       :yum: :yum:       :mask: :mask:                 :sunglasses: :sunglasses:       :dizzy_face: :dizzy_face:       :imp: :imp:                 :smiling_imp: :smiling_imp:       :neutral_face: :neutral_face:       :no_mouth: :no_mouth:                 :innocent: :innocent:       :alien: :alien:       :yellow_heart: :yellow_heart:                 :blue_heart: :blue_heart:       :purple_heart: :purple_heart:       :heart: :heart:                 :green_heart: :green_heart:       :broken_heart: :broken_heart:       :heartbeat: :heartbeat:                 :heartpulse: :heartpulse:       :two_hearts: :two_hearts:       :revolving_hearts: :revolving_hearts:                 :cupid: :cupid:       :sparkling_heart: :sparkling_heart:       :sparkles: :sparkles:                 :star: :star:       :star2: :star2:       :dizzy: :dizzy:                 :boom: :boom:       :collision: :collision:       :anger: :anger:                 :exclamation: :exclamation:       :question: :question:       :grey_exclamation: :grey_exclamation:                 :grey_question: :grey_question:       :zzz: :zzz:       :dash: :dash:                 :sweat_drops: :sweat_drops:       :notes: :notes:       :musical_note: :musical_note:                 :fire: :fire:       :hankey: :hankey:       :poop: :poop:                 :shit: :shit:       :+1: :+1:       :thumbsup: :thumbsup:                 :-1: :-1:       :thumbsdown: :thumbsdown:       :ok_hand: :ok_hand:                 :punch: :punch:       :facepunch: :facepunch:       :fist: :fist:                 :v: :v:       :wave: :wave:       :hand: :hand:                 :raised_hand: :raised_hand:       :open_hands: :open_hands:       :point_up: :point_up:                 :point_down: :point_down:       :point_left: :point_left:       :point_right: :point_right:                 :raised_hands: :raised_hands:       :pray: :pray:       :point_up_2: :point_up_2:                 :clap: :clap:       :muscle: :muscle:       :metal: :metal:                 :fu: :fu:       :walking: :walking:       :runner: :runner:                 :running: :running:       :couple: :couple:       :family: :family:                 :two_men_holding_hands: :two_men_holding_hands:       :two_women_holding_hands: :two_women_holding_hands:       :dancer: :dancer:                 :dancers: :dancers:       :ok_woman: :ok_woman:       :no_good: :no_good:                 :information_desk_person: :information_desk_person:       :raising_hand: :raising_hand:       :bride_with_veil: :bride_with_veil:                 :person_with_pouting_face: :person_with_pouting_face:       :person_frowning: :person_frowning:       :bow: :bow:                 :couplekiss: :couplekiss:       :couple_with_heart: :couple_with_heart:       :massage: :massage:                 :haircut: :haircut:       :nail_care: :nail_care:       :boy: :boy:                 :girl: :girl:       :woman: :woman:       :man: :man:                 :baby: :baby:       :older_woman: :older_woman:       :older_man: :older_man:                 :person_with_blond_hair: :person_with_blond_hair:       :man_with_gua_pi_mao: :man_with_gua_pi_mao:       :man_with_turban: :man_with_turban:                 :construction_worker: :construction_worker:       :cop: :cop:       :angel: :angel:                 :princess: :princess:       :smiley_cat: :smiley_cat:       :smile_cat: :smile_cat:                 :heart_eyes_cat: :heart_eyes_cat:       :kissing_cat: :kissing_cat:       :smirk_cat: :smirk_cat:                 :scream_cat: :scream_cat:       :crying_cat_face: :crying_cat_face:       :joy_cat: :joy_cat:                 :pouting_cat: :pouting_cat:       :japanese_ogre: :japanese_ogre:       :japanese_goblin: :japanese_goblin:                 :see_no_evil: :see_no_evil:       :hear_no_evil: :hear_no_evil:       :speak_no_evil: :speak_no_evil:                 :guardsman: :guardsman:       :skull: :skull:       :feet: :feet:                 :lips: :lips:       :kiss: :kiss:       :droplet: :droplet:                 :ear: :ear:       :eyes: :eyes:       :nose: :nose:                 :tongue: :tongue:       :love_letter: :love_letter:       :bust_in_silhouette: :bust_in_silhouette:                 :busts_in_silhouette: :busts_in_silhouette:       :speech_balloon: :speech_balloon:       :thought_balloon: :thought_balloon:                 :feelsgood: :feelsgood:       :finnadie: :finnadie:       :goberserk: :goberserk:                 :godmode: :godmode:       :hurtrealbad: :hurtrealbad:       :rage1: :rage1:                 :rage2: :rage2:       :rage3: :rage3:       :rage4: :rage4:                 :suspect: :suspect:       :trollface: :trollface:                   Natureza                  :sunny: :sunny:       :umbrella: :umbrella:       :cloud: :cloud:                       :snowflake: :snowflake:       :snowman: :snowman:       :zap: :zap:                 :cyclone: :cyclone:       :foggy: :foggy:       :ocean: :ocean:                 :cat: :cat:       :dog: :dog:       :mouse: :mouse:                 :hamster: :hamster:       :rabbit: :rabbit:       :wolf: :wolf:                 :frog: :frog:       :tiger: :tiger:       :koala: :koala:                 :bear: :bear:       :pig: :pig:       :pig_nose: :pig_nose:                 :cow: :cow:       :boar: :boar:       :monkey_face: :monkey_face:                 :monkey: :monkey:       :horse: :horse:       :racehorse: :racehorse:                 :camel: :camel:       :sheep: :sheep:       :elephant: :elephant:                 :panda_face: :panda_face:       :snake: :snake:       :bird: :bird:                 :baby_chick: :baby_chick:       :hatched_chick: :hatched_chick:       :hatching_chick: :hatching_chick:                 :chicken: :chicken:       :penguin: :penguin:       :turtle: :turtle:                 :bug: :bug:       :honeybee: :honeybee:       :ant: :ant:                 :beetle: :beetle:       :snail: :snail:       :octopus: :octopus:                 :tropical_fish: :tropical_fish:       :fish: :fish:       :whale: :whale:                 :whale2: :whale2:       :dolphin: :dolphin:       :cow2: :cow2:                 :ram: :ram:       :rat: :rat:       :water_buffalo: :water_buffalo:                 :tiger2: :tiger2:       :rabbit2: :rabbit2:       :dragon: :dragon:                 :goat: :goat:       :rooster: :rooster:       :dog2: :dog2:                 :pig2: :pig2:       :mouse2: :mouse2:       :ox: :ox:                 :dragon_face: :dragon_face:       :blowfish: :blowfish:       :crocodile: :crocodile:                 :dromedary_camel: :dromedary_camel:       :leopard: :leopard:       :cat2: :cat2:                 :poodle: :poodle:       :paw_prints: :paw_prints:       :bouquet: :bouquet:                 :cherry_blossom: :cherry_blossom:       :tulip: :tulip:       :four_leaf_clover: :four_leaf_clover:                 :rose: :rose:       :sunflower: :sunflower:       :hibiscus: :hibiscus:                 :maple_leaf: :maple_leaf:       :leaves: :leaves:       :fallen_leaf: :fallen_leaf:                 :herb: :herb:       :mushroom: :mushroom:       :cactus: :cactus:                 :palm_tree: :palm_tree:       :evergreen_tree: :evergreen_tree:       :deciduous_tree: :deciduous_tree:                 :chestnut: :chestnut:       :seedling: :seedling:       :blossom: :blossom:                 :ear_of_rice: :ear_of_rice:       :shell: :shell:       :globe_with_meridians: :globe_with_meridians:                 :sun_with_face: :sun_with_face:       :full_moon_with_face: :full_moon_with_face:       :new_moon_with_face: :new_moon_with_face:                 :new_moon: :new_moon:       :waxing_crescent_moon: :waxing_crescent_moon:       :first_quarter_moon: :first_quarter_moon:                 :waxing_gibbous_moon: :waxing_gibbous_moon:       :full_moon: :full_moon:       :waning_gibbous_moon: :waning_gibbous_moon:                 :last_quarter_moon: :last_quarter_moon:       :waning_crescent_moon: :waning_crescent_moon:       :last_quarter_moon_with_face: :last_quarter_moon_with_face:                 :first_quarter_moon_with_face: :first_quarter_moon_with_face:       :moon: :moon:       :earth_africa: :earth_africa:                 :earth_americas: :earth_americas:       :earth_asia: :earth_asia:       :volcano: :volcano:                 :milky_way: :milky_way:       :partly_sunny: :partly_sunny:       :octocat: :octocat:                 :squirrel: :squirrel:                           Objetos                  :bamboo: :bamboo:       :gift_heart: :gift_heart:       :dolls: :dolls:                       :school_satchel: :school_satchel:       :mortar_board: :mortar_board:       :flags: :flags:                 :fireworks: :fireworks:       :sparkler: :sparkler:       :wind_chime: :wind_chime:                 :rice_scene: :rice_scene:       :jack_o_lantern: :jack_o_lantern:       :ghost: :ghost:                 :santa: :santa:       :christmas_tree: :christmas_tree:       :gift: :gift:                 :bell: :bell:       :no_bell: :no_bell:       :tanabata_tree: :tanabata_tree:                 :tada: :tada:       :confetti_ball: :confetti_ball:       :balloon: :balloon:                 :crystal_ball: :crystal_ball:       :cd: :cd:       :dvd: :dvd:                 :floppy_disk: :floppy_disk:       :camera: :camera:       :video_camera: :video_camera:                 :movie_camera: :movie_camera:       :computer: :computer:       :tv: :tv:                 :iphone: :iphone:       :phone: :phone:       :telephone: :telephone:                 :telephone_receiver: :telephone_receiver:       :pager: :pager:       :fax: :fax:                 :minidisc: :minidisc:       :vhs: :vhs:       :sound: :sound:                 :speaker: :speaker:       :mute: :mute:       :loudspeaker: :loudspeaker:                 :mega: :mega:       :hourglass: :hourglass:       :hourglass_flowing_sand: :hourglass_flowing_sand:                 :alarm_clock: :alarm_clock:       :watch: :watch:       :radio: :radio:                 :satellite: :satellite:       :loop: :loop:       :mag: :mag:                 :mag_right: :mag_right:       :unlock: :unlock:       :lock: :lock:                 :lock_with_ink_pen: :lock_with_ink_pen:       :closed_lock_with_key: :closed_lock_with_key:       :key: :key:                 :bulb: :bulb:       :flashlight: :flashlight:       :high_brightness: :high_brightness:                 :low_brightness: :low_brightness:       :electric_plug: :electric_plug:       :battery: :battery:                 :calling: :calling:       :email: :email:       :mailbox: :mailbox:                 :postbox: :postbox:       :bath: :bath:       :bathtub: :bathtub:                 :shower: :shower:       :toilet: :toilet:       :wrench: :wrench:                 :nut_and_bolt: :nut_and_bolt:       :hammer: :hammer:       :seat: :seat:                 :moneybag: :moneybag:       :yen: :yen:       :dollar: :dollar:                 :pound: :pound:       :euro: :euro:       :credit_card: :credit_card:                 :money_with_wings: :money_with_wings:       :e-mail: :e-mail:       :inbox_tray: :inbox_tray:                 :outbox_tray: :outbox_tray:       :envelope: :envelope:       :incoming_envelope: :incoming_envelope:                 :postal_horn: :postal_horn:       :mailbox_closed: :mailbox_closed:       :mailbox_with_mail: :mailbox_with_mail:                 :mailbox_with_no_mail: :mailbox_with_no_mail:       :door: :door:       :smoking: :smoking:                 :bomb: :bomb:       :gun: :gun:       :hocho: :hocho:                 :pill: :pill:       :syringe: :syringe:       :page_facing_up: :page_facing_up:                 :page_with_curl: :page_with_curl:       :bookmark_tabs: :bookmark_tabs:       :bar_chart: :bar_chart:                 :chart_with_upwards_trend: :chart_with_upwards_trend:       :chart_with_downwards_trend: :chart_with_downwards_trend:       :scroll: :scroll:                 :clipboard: :clipboard:       :calendar: :calendar:       :date: :date:                 :card_index: :card_index:       :file_folder: :file_folder:       :open_file_folder: :open_file_folder:                 :scissors: :scissors:       :pushpin: :pushpin:       :paperclip: :paperclip:                 :black_nib: :black_nib:       :pencil2: :pencil2:       :straight_ruler: :straight_ruler:                 :triangular_ruler: :triangular_ruler:       :closed_book: :closed_book:       :green_book: :green_book:                 :blue_book: :blue_book:       :orange_book: :orange_book:       :notebook: :notebook:                 :notebook_with_decorative_cover: :notebook_with_decorative_cover:       :ledger: :ledger:       :books: :books:                 :bookmark: :bookmark:       :name_badge: :name_badge:       :microscope: :microscope:                 :telescope: :telescope:       :newspaper: :newspaper:       :football: :football:                 :basketball: :basketball:       :soccer: :soccer:       :baseball: :baseball:                 :tennis: :tennis:       :8ball: :8ball:       :rugby_football: :rugby_football:                 :bowling: :bowling:       :golf: :golf:       :mountain_bicyclist: :mountain_bicyclist:                 :bicyclist: :bicyclist:       :horse_racing: :horse_racing:       :snowboarder: :snowboarder:                 :swimmer: :swimmer:       :surfer: :surfer:       :ski: :ski:                 :spades: :spades:       :hearts: :hearts:       :clubs: :clubs:                 :diamonds: :diamonds:       :gem: :gem:       :ring: :ring:                 :trophy: :trophy:       :musical_score: :musical_score:       :musical_keyboard: :musical_keyboard:                 :violin: :violin:       :space_invader: :space_invader:       :video_game: :video_game:                 :black_joker: :black_joker:       :flower_playing_cards: :flower_playing_cards:       :game_die: :game_die:                 :dart: :dart:       :mahjong: :mahjong:       :clapper: :clapper:                 :memo: :memo:       :pencil: :pencil:       :book: :book:                 :art: :art:       :microphone: :microphone:       :headphones: :headphones:                 :trumpet: :trumpet:       :saxophone: :saxophone:       :guitar: :guitar:                 :shoe: :shoe:       :sandal: :sandal:       :high_heel: :high_heel:                 :lipstick: :lipstick:       :boot: :boot:       :shirt: :shirt:                 :tshirt: :tshirt:       :necktie: :necktie:       :womans_clothes: :womans_clothes:                 :dress: :dress:       :running_shirt_with_sash: :running_shirt_with_sash:       :jeans: :jeans:                 :kimono: :kimono:       :bikini: :bikini:       :ribbon: :ribbon:                 :tophat: :tophat:       :crown: :crown:       :womans_hat: :womans_hat:                 :mans_shoe: :mans_shoe:       :closed_umbrella: :closed_umbrella:       :briefcase: :briefcase:                 :handbag: :handbag:       :pouch: :pouch:       :purse: :purse:                 :eyeglasses: :eyeglasses:       :fishing_pole_and_fish: :fishing_pole_and_fish:       :coffee: :coffee:                 :tea: :tea:       :sake: :sake:       :baby_bottle: :baby_bottle:                 :beer: :beer:       :beers: :beers:       :cocktail: :cocktail:                 :tropical_drink: :tropical_drink:       :wine_glass: :wine_glass:       :fork_and_knife: :fork_and_knife:                 :pizza: :pizza:       :hamburger: :hamburger:       :fries: :fries:                 :poultry_leg: :poultry_leg:       :meat_on_bone: :meat_on_bone:       :spaghetti: :spaghetti:                 :curry: :curry:       :fried_shrimp: :fried_shrimp:       :bento: :bento:                 :sushi: :sushi:       :fish_cake: :fish_cake:       :rice_ball: :rice_ball:                 :rice_cracker: :rice_cracker:       :rice: :rice:       :ramen: :ramen:                 :stew: :stew:       :oden: :oden:       :dango: :dango:                 :egg: :egg:       :bread: :bread:       :doughnut: :doughnut:                 :custard: :custard:       :icecream: :icecream:       :ice_cream: :ice_cream:                 :shaved_ice: :shaved_ice:       :birthday: :birthday:       :cake: :cake:                 :cookie: :cookie:       :chocolate_bar: :chocolate_bar:       :candy: :candy:                 :lollipop: :lollipop:       :honey_pot: :honey_pot:       :apple: :apple:                 :green_apple: :green_apple:       :tangerine: :tangerine:       :lemon: :lemon:                 :cherries: :cherries:       :grapes: :grapes:       :watermelon: :watermelon:                 :strawberry: :strawberry:       :peach: :peach:       :melon: :melon:                 :banana: :banana:       :pear: :pear:       :pineapple: :pineapple:                 :sweet_potato: :sweet_potato:       :eggplant: :eggplant:       :tomato: :tomato:                 :corn: :corn:                           Lugares                  :house: :house:       :house_with_garden: :house_with_garden:       :school: :school:                       :office: :office:       :post_office: :post_office:       :hospital: :hospital:                 :bank: :bank:       :convenience_store: :convenience_store:       :love_hotel: :love_hotel:                 :hotel: :hotel:       :wedding: :wedding:       :church: :church:                 :department_store: :department_store:       :european_post_office: :european_post_office:       :city_sunrise: :city_sunrise:                 :city_sunset: :city_sunset:       :japanese_castle: :japanese_castle:       :european_castle: :european_castle:                 :tent: :tent:       :factory: :factory:       :tokyo_tower: :tokyo_tower:                 :japan: :japan:       :mount_fuji: :mount_fuji:       :sunrise_over_mountains: :sunrise_over_mountains:                 :sunrise: :sunrise:       :stars: :stars:       :statue_of_liberty: :statue_of_liberty:                 :bridge_at_night: :bridge_at_night:       :carousel_horse: :carousel_horse:       :rainbow: :rainbow:                 :ferris_wheel: :ferris_wheel:       :fountain: :fountain:       :roller_coaster: :roller_coaster:                 :ship: :ship:       :speedboat: :speedboat:       :boat: :boat:                 :sailboat: :sailboat:       :rowboat: :rowboat:       :anchor: :anchor:                 :rocket: :rocket:       :airplane: :airplane:       :helicopter: :helicopter:                 :steam_locomotive: :steam_locomotive:       :tram: :tram:       :mountain_railway: :mountain_railway:                 :bike: :bike:       :aerial_tramway: :aerial_tramway:       :suspension_railway: :suspension_railway:                 :mountain_cableway: :mountain_cableway:       :tractor: :tractor:       :blue_car: :blue_car:                 :oncoming_automobile: :oncoming_automobile:       :car: :car:       :red_car: :red_car:                 :taxi: :taxi:       :oncoming_taxi: :oncoming_taxi:       :articulated_lorry: :articulated_lorry:                 :bus: :bus:       :oncoming_bus: :oncoming_bus:       :rotating_light: :rotating_light:                 :police_car: :police_car:       :oncoming_police_car: :oncoming_police_car:       :fire_engine: :fire_engine:                 :ambulance: :ambulance:       :minibus: :minibus:       :truck: :truck:                 :train: :train:       :station: :station:       :train2: :train2:                 :bullettrain_front: :bullettrain_front:       :bullettrain_side: :bullettrain_side:       :light_rail: :light_rail:                 :monorail: :monorail:       :railway_car: :railway_car:       :trolleybus: :trolleybus:                 :ticket: :ticket:       :fuelpump: :fuelpump:       :vertical_traffic_light: :vertical_traffic_light:                 :traffic_light: :traffic_light:       :warning: :warning:       :construction: :construction:                 :beginner: :beginner:       :atm: :atm:       :slot_machine: :slot_machine:                 :busstop: :busstop:       :barber: :barber:       :hotsprings: :hotsprings:                 :checkered_flag: :checkered_flag:       :crossed_flags: :crossed_flags:       :izakaya_lantern: :izakaya_lantern:                 :moyai: :moyai:       :circus_tent: :circus_tent:       :performing_arts: :performing_arts:                 :round_pushpin: :round_pushpin:       :triangular_flag_on_post: :triangular_flag_on_post:       :jp: :jp:                 :kr: :kr:       :cn: :cn:       :us: :us:                 :fr: :fr:       :es: :es:       :it: :it:                 :ru: :ru:       :gb: :gb:       :uk: :uk:                 :de: :de:                           Símbolos                  :one: :one:       :two: :two:       :three: :three:                       :four: :four:       :five: :five:       :six: :six:                 :seven: :seven:       :eight: :eight:       :nine: :nine:                 :keycap_ten: :keycap_ten:       :1234: :1234:       :zero: :zero:                 :hash: :hash:       :symbols: :symbols:       :arrow_backward: :arrow_backward:                 :arrow_down: :arrow_down:       :arrow_forward: :arrow_forward:       :arrow_left: :arrow_left:                 :capital_abcd: :capital_abcd:       :abcd: :abcd:       :abc: :abc:                 :arrow_lower_left: :arrow_lower_left:       :arrow_lower_right: :arrow_lower_right:       :arrow_right: :arrow_right:                 :arrow_up: :arrow_up:       :arrow_upper_left: :arrow_upper_left:       :arrow_upper_right: :arrow_upper_right:                 :arrow_double_down: :arrow_double_down:       :arrow_double_up: :arrow_double_up:       :arrow_down_small: :arrow_down_small:                 :arrow_heading_down: :arrow_heading_down:       :arrow_heading_up: :arrow_heading_up:       :leftwards_arrow_with_hook: :leftwards_arrow_with_hook:                 :arrow_right_hook: :arrow_right_hook:       :left_right_arrow: :left_right_arrow:       :arrow_up_down: :arrow_up_down:                 :arrow_up_small: :arrow_up_small:       :arrows_clockwise: :arrows_clockwise:       :arrows_counterclockwise: :arrows_counterclockwise:                 :rewind: :rewind:       :fast_forward: :fast_forward:       :information_source: :information_source:                 :ok: :ok:       :twisted_rightwards_arrows: :twisted_rightwards_arrows:       :repeat: :repeat:                 :repeat_one: :repeat_one:       :new: :new:       :top: :top:                 :up: :up:       :cool: :cool:       :free: :free:                 :ng: :ng:       :cinema: :cinema:       :koko: :koko:                 :signal_strength: :signal_strength:       :u5272: :u5272:       :u5408: :u5408:                 :u55b6: :u55b6:       :u6307: :u6307:       :u6708: :u6708:                 :u6709: :u6709:       :u6e80: :u6e80:       :u7121: :u7121:                 :u7533: :u7533:       :u7a7a: :u7a7a:       :u7981: :u7981:                 :sa: :sa:       :restroom: :restroom:       :mens: :mens:                 :womens: :womens:       :baby_symbol: :baby_symbol:       :no_smoking: :no_smoking:                 :parking: :parking:       :wheelchair: :wheelchair:       :metro: :metro:                 :baggage_claim: :baggage_claim:       :accept: :accept:       :wc: :wc:                 :potable_water: :potable_water:       :put_litter_in_its_place: :put_litter_in_its_place:       :secret: :secret:                 :congratulations: :congratulations:       :m: :m:       :passport_control: :passport_control:                 :left_luggage: :left_luggage:       :customs: :customs:       :ideograph_advantage: :ideograph_advantage:                 :cl: :cl:       :sos: :sos:       :id: :id:                 :no_entry_sign: :no_entry_sign:       :underage: :underage:       :no_mobile_phones: :no_mobile_phones:                 :do_not_litter: :do_not_litter:       :non-potable_water: :non-potable_water:       :no_bicycles: :no_bicycles:                 :no_pedestrians: :no_pedestrians:       :children_crossing: :children_crossing:       :no_entry: :no_entry:                 :eight_spoked_asterisk: :eight_spoked_asterisk:       :eight_pointed_black_star: :eight_pointed_black_star:       :heart_decoration: :heart_decoration:                 :vs: :vs:       :vibration_mode: :vibration_mode:       :mobile_phone_off: :mobile_phone_off:                 :chart: :chart:       :currency_exchange: :currency_exchange:       :aries: :aries:                 :taurus: :taurus:       :gemini: :gemini:       :cancer: :cancer:                 :leo: :leo:       :virgo: :virgo:       :libra: :libra:                 :scorpius: :scorpius:       :sagittarius: :sagittarius:       :capricorn: :capricorn:                 :aquarius: :aquarius:       :pisces: :pisces:       :ophiuchus: :ophiuchus:                 :six_pointed_star: :six_pointed_star:       :negative_squared_cross_mark: :negative_squared_cross_mark:       :a: :a:                 :b: :b:       :ab: :ab:       :o2: :o2:                 :diamond_shape_with_a_dot_inside: :diamond_shape_with_a_dot_inside:       :recycle: :recycle:       :end: :end:                 :on: :on:       :soon: :soon:       :clock1: :clock1:                 :clock130: :clock130:       :clock10: :clock10:       :clock1030: :clock1030:                 :clock11: :clock11:       :clock1130: :clock1130:       :clock12: :clock12:                 :clock1230: :clock1230:       :clock2: :clock2:       :clock230: :clock230:                 :clock3: :clock3:       :clock330: :clock330:       :clock4: :clock4:                 :clock430: :clock430:       :clock5: :clock5:       :clock530: :clock530:                 :clock6: :clock6:       :clock630: :clock630:       :clock7: :clock7:                 :clock730: :clock730:       :clock8: :clock8:       :clock830: :clock830:                 :clock9: :clock9:       :clock930: :clock930:       :heavy_dollar_sign: :heavy_dollar_sign:                 :copyright: :copyright:       :registered: :registered:       :tm: :tm:                 :x: :x:       :heavy_exclamation_mark: :heavy_exclamation_mark:       :bangbang: :bangbang:                 :interrobang: :interrobang:       :o: :o:       :heavy_multiplication_x: :heavy_multiplication_x:                 :heavy_plus_sign: :heavy_plus_sign:       :heavy_minus_sign: :heavy_minus_sign:       :heavy_division_sign: :heavy_division_sign:                 :white_flower: :white_flower:       :100: :100:       :heavy_check_mark: :heavy_check_mark:                 :ballot_box_with_check: :ballot_box_with_check:       :radio_button: :radio_button:       :link: :link:                 :curly_loop: :curly_loop:       :wavy_dash: :wavy_dash:       :part_alternation_mark: :part_alternation_mark:                 :trident: :trident:       :black_square: :black_square:       :white_square: :white_square:                 :white_check_mark: :white_check_mark:       :black_square_button: :black_square_button:       :white_square_button: :white_square_button:                 :black_circle: :black_circle:       :white_circle: :white_circle:       :red_circle: :red_circle:                 :large_blue_circle: :large_blue_circle:       :large_blue_diamond: :large_blue_diamond:       :large_orange_diamond: :large_orange_diamond:                 :small_blue_diamond: :small_blue_diamond:       :small_orange_diamond: :small_orange_diamond:       :small_red_triangle: :small_red_triangle:                 :small_red_triangle_down: :small_red_triangle_down:       :shipit: :shipit:                   Referência      rxaviers gist  ","categories": [],
        "tags": [],
        "url": "/recipes/github-emojis/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Home",
        "excerpt":"Nesta seção você encontrará os mais diversos tipos de script.  ","categories": [],
        "tags": [],
        "url": "/recipes/home/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Java Hello, World!",
        "excerpt":"   Hello, Java!    Iniciando com a linguagem Java!   Instalação   Linux   sudo apt update &amp;&amp; \\ sudo apt upgrade &amp;&amp; \\ sudo apt install default-jre &amp;&amp;\\ sudo apt install default-jdk   Windows           Download            Denfinir alias no .bashrc       alias java=\"/c/'Program Files'/java/jdk-16.0.2/bin/java.exe\"   Código   import java.util.Scanner;  public class Hello {     static String userName = \"\";     // Execute on file call     public static void main(String[] args) {         getName();         toGreet();     }     public static void getName() {         // Create a Scanner Object         Scanner sc = new Scanner(System.in);         System.out.println(\"Enter username: \");          // Read user input         String userName = sc.next();         sc.close();     }     public static void toGreet() {         System.out.println(String.format(\"Hello, World! %s\", userName));      } }    Execução   Compilar:   javac Hello.java   Executar:   java Hello.java  ","categories": [],
        "tags": [],
        "url": "/recipes/java-hello-world/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Java JPA Hibernate",
        "excerpt":"Exemplo JPA com Hibernate.   Ingredientes      Docker   Docker Compose   Maven   Open JDK 11   Hibernate   PostgresSQL        H2 Database       vscode   vscode language support for Java(TM) by Red Hat   vscode extension pack for Java (Microsoft)   vscode debugger for Java (Microsoft)   vscode maven for Java (Microsoft)   vscode project management for Java (Microsoft)   vscode test runner for Java (Microsoft)   vscode Java code generators (Microsoft)   vscode XML language support by Red Hat   Preparo:      No vscode: ctrl + shift + p   Selecione Java: Create Java Project   Selecione Maven   Selecione maven-archetype-quickstart   Docker   Dockerfiles   maven:   FROM maven:3.8.3-openjdk-17-slim  RUN apt-get update &amp;&amp; apt-get install -y netcat ARG USER_HOME_DIR=\"/root\"  ENV MAVEN_HOME /usr/share/maven ENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"  VOLUME \"$USER_HOME_DIR/.m2\"  WORKDIR /app COPY src /app/src COPY pom.xml /app  # Add entrypoint COPY scripts/entrypoint.sh /app/scripts/entrypoint.sh CMD [\"chmod\", \"+x\", \"/app/scripts/entrypoint.sh\"] ENTRYPOINT [\"/app/scripts/entrypoint.sh\"]    maven test:   FROM maven:3.8.3-openjdk-17-slim  RUN apt-get update &amp;&amp; apt-get install -y netcat WORKDIR /app COPY src /app/src COPY pom.xml /app    Entrypoint   Produção:   #!/bin/bash # --------------------------------------------------------------------------- # # Wait until database starts. # --------------------------------------------------------------------------- # if [ \"$DATABASE\" = \"postgres\" ] then     echo \"Waiting for postgres...\"      while ! nc -z $SQL_HOST $SQL_PORT; do       sleep 0.1     done      echo \"PostgreSQL started\" fi # --------------------------------------------------------------------------- # # Compile application. # --------------------------------------------------------------------------- # mvn -T 2C clean package \\   -Dmaven.test.skip -DskipTests -f  /app  &amp;&amp; \\ # --------------------------------------------------------------------------- # # Run application main class. # --------------------------------------------------------------------------- # mvn -e exec:java \\   -Dexec.cleanupDaemonThreads=false \\   -Dexec.mainClass=\"com.dmenezesgabriel.jpa.view.ProfileView\"    Docker Compose   # # hibernate/docker-compose.yml version: \"3.9\"  services:   # ------------------------------------------------------------------------- #   # Production Database   # ------------------------------------------------------------------------- #   postgres:     container_name: postgres     image: postgres:14.0-alpine     # volumes:     # - ./postgres_data:/var/lib/postgresql/data/     ports:       - 5432:5432     environment:       POSTGRES_PASSWORD: postgres     networks:       - prod   # ------------------------------------------------------------------------- #   # Database Tool   # ------------------------------------------------------------------------- #   pgadmin:     container_name: pgadmin     image: dpage/pgadmin4     ports:       - 8087:80       - 4443:443     environment:       PGADMIN_DEFAULT_EMAIL: dmenezes.gabriel@gmail.com       PGADMIN_DEFAULT_PASSWORD: postgres       PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: \"True\"       PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10     depends_on:       - postgres     networks:       - prod   # ------------------------------------------------------------------------- #   # Production Maven   # ------------------------------------------------------------------------- #   maven:     build:       context: .       dockerfile: dockerfiles/Dockerfile-maven     volumes:       - ./.m2:/root/.m2       - $PWD/src:/app/src     networks:       - prod     depends_on:       - postgres     environment:       # entrypoint.sh database health check variables       SQL_HOST: postgres       SQL_PORT: 5432       DATABASE: postgres   # ------------------------------------------------------------------------- #   # Maven Tests   # ------------------------------------------------------------------------- #   maven-test:     build:       context: .       dockerfile: dockerfiles/Dockerfile-maven-test     command: /bin/bash -c 'mvn -e clean test'     volumes:       - ./.m2:/root/.m2       - $PWD/src:/app/src     networks:       - test # -------------------------------------------------------------------------- # # Docker networks # -------------------------------------------------------------------------- # networks:   prod:   test:    Código fonte   Entidades   Usuário:   // hibernate/src/main/java/com/dmenezesgabriel/jpa/domain/User.java package com.dmenezesgabriel.jpa.domain.entity;  /**  * User entity  *  * @author Gabriel Menezes  * @version 1.0  */ import java.util.Calendar; import javax.persistence.Column; import javax.persistence.Entity; import javax.persistence.GeneratedValue; import javax.persistence.GenerationType; import javax.persistence.Id; import javax.persistence.Inheritance; import javax.persistence.InheritanceType; import javax.persistence.SequenceGenerator; import javax.persistence.Table; import javax.persistence.Temporal; import javax.persistence.TemporalType; import java.io.Serializable; import java.text.SimpleDateFormat;  import org.hibernate.annotations.CreationTimestamp; import org.hibernate.annotations.UpdateTimestamp; import java.util.Objects;  @Entity @Table(name = \"tbl_usuario\") // Each class has it's own table and subclass tables are mapped to superclass @Inheritance(strategy = InheritanceType.JOINED) public class User implements Serializable {     protected static final long serialVersionUID = 1L;      @Id     @SequenceGenerator(name = \"tbl_usuario_cd_usuario_seq\",             sequenceName = \"tbl_usuario_cd_usuario_seq\", allocationSize = 1)     @GeneratedValue(strategy = GenerationType.SEQUENCE,             generator = \"tbl_usuario_cd_usuario_seq\")     @Column(name = \"cd_usuario\", updatable = false)     // The naming tablename_columname_seq is the PostgreSQL default sequence     // naming     // for SERIAL     // The allocationSize=1 is important if you need Hibernate to co-operate     // with     // other clients     // Note that this sequence will have \"gaps\" in it if transactions roll back.     // Never assume that for any id n there is an id n-1 or n+1.     private int id;      @Column(name = \"nm_usuario\", nullable = false, length = 60)     private String name;      @Column(name = \"ds_email\", nullable = false, unique = true, length = 60)     private String email;      @Column(name = \"ds_senha\", nullable = false, length = 60)     private String password;      @CreationTimestamp     @Temporal(TemporalType.TIMESTAMP)     @Column(name = \"dt_criacao\", columnDefinition = \"TIMESTAMP WITH TIME ZONE\",             updatable = false)     private Calendar createdAt;      @UpdateTimestamp     @Temporal(TemporalType.TIMESTAMP)     @Column(name = \"dt_atualizacao\",             columnDefinition = \"TIMESTAMP WITH TIME ZONE\")     private Calendar updatedAt;      // Constructor - getters and setters       public User() {}      public User(int id, String name, String email, String password,             Calendar createdAt, Calendar updatedAt) {         this.id = id;         this.name = name;         this.email = email;         this.password = password;         this.createdAt = createdAt;         this.updatedAt = updatedAt;     }      public int getId() {         return this.id;     }      public void setId(int id) {         this.id = id;     }      public String getName() {         return this.name;     }      public void setName(String name) {         this.name = name;     }      public String getEmail() {         return this.email;     }      public void setEmail(String email) {         this.email = email;     }      public String getPassword() {         return this.password;     }      public void setPassword(String password) {         this.password = password;     }      public Calendar getCreatedAt() {         return this.createdAt;     }      public void setCreatedAt(Calendar createdAt) {         this.createdAt = createdAt;     }      public Calendar getUpdatedAt() {         return this.updatedAt;     }      public void setUpdatedAt(Calendar updatedAt) {         this.updatedAt = updatedAt;     }      public User id(int id) {         setId(id);         return this;     }      public User name(String name) {         setName(name);         return this;     }      public User email(String email) {         setEmail(email);         return this;     }      public User password(String password) {         setPassword(password);         return this;     }      public User createdAt(Calendar createdAt) {         setCreatedAt(createdAt);         return this;     }      public User updatedAt(Calendar updatedAt) {         setUpdatedAt(updatedAt);         return this;     }      @Override     public boolean equals(Object o) {         if (o == this)             return true;         if (!(o instanceof User)) {             return false;         }         User user = (User) o;         return id == user.id &amp;&amp; Objects.equals(name, user.name)                 &amp;&amp; Objects.equals(email, user.email)                 &amp;&amp; Objects.equals(password, user.password)                 &amp;&amp; Objects.equals(createdAt, user.createdAt)                 &amp;&amp; Objects.equals(updatedAt, user.updatedAt);     }      @Override     public int hashCode() {         return Objects.hash(id, name, email, password, createdAt, updatedAt);     }      @Override     public String toString() {         SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");          return \"{\" + \" id='\" + getId() + \"'\" + \", name='\" + getName() + \"'\"                 + \", email='\" + getEmail() + \"'\" + \", password='\"                 + getPassword() + \"'\" + \", createdAt='\"                 + sdf.format(createdAt.getTime()) + \"'\" + \", updatedAt='\"                 + sdf.format(updatedAt.getTime()) + \"'\" + \"}\";     }  }    Gênero Enum:   // hibernate/src/main/java/com/dmenezesgabriel/jpa/domain/Gender.java package com.dmenezesgabriel.jpa.domain.entity;  public enum Gender {      MALE(\"masculino\"), FEMALE(\"feminino\");      private String description;      Gender(String description) {         this.description = description;     }      public String getDescription() {         return description;     } }    Testes   Entidades:   // hibernate/src/test/java/com/dmenezesgabriel/jpa/User.java package com.dmenezesgabriel.jpa.domain.entity;  import static org.junit.jupiter.api.Assertions.assertEquals; import org.junit.jupiter.api.DisplayName; import org.junit.jupiter.api.Test;  public class TestUser {     @Test     @DisplayName(\"Should instance User object correctly.\")     public void shouldInstanceObjectCorrectly() throws Exception {         User user = new User();          user.setName(\"Gabriel\");         user.setEmail(\"gabriel@example.com\");         user.setPassword(\"123\");          assertEquals(user.getName(), \"Gabriel\");         assertEquals(user.getEmail(), \"gabriel@example.com\");         assertEquals(user.getPassword(), \"123\");      } }    persistence.xml   Produção:   &lt;!-- src/main/resources/META-INF/persistence.xml --&gt; &lt;persistence xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence              http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\" version=\"2.1\"&gt;    &lt;!-- transaction-type --&gt;   &lt;!-- - RESOURCE_LOCAL --&gt;   &lt;!-- - JTA --&gt;   &lt;persistence-unit name=\"com.dmenezesgabriel.jpa\" transaction-type=\"RESOURCE_LOCAL\"&gt;     &lt;!-- Framework used for JPA especification --&gt;     &lt;provider&gt;org.hibernate.jpa.HibernatePersistenceProvider&lt;/provider&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.User&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Phone&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Address&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Customer&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.EstablishmentResponsible&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Document&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Establishment&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.EstablishmentSegment&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.EstablishmentEvaluation&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Product&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.ProductCategory&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.ProductType&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.GuestCheckPad&lt;/class&gt;      &lt;properties&gt;       &lt;!-- Database Driver --&gt;       &lt;property name=\"javax.persistence.jdbc.driver\" value=\"org.postgresql.Driver\" /&gt;       &lt;!-- Database connection uri --&gt;       &lt;!-- \"jdbc:sgdb_name://host_address:port_number/database_name\" --&gt;       &lt;!-- - When using docker, host addres is the container name --&gt;       &lt;property name=\"javax.persistence.jdbc.url\" value=\"jdbc:postgresql://postgres:5432/postgres\" /&gt;       &lt;!-- Database User --&gt;       &lt;property name=\"javax.persistence.jdbc.user\" value=\"postgres\" /&gt;       &lt;!-- Database Password --&gt;       &lt;property name=\"javax.persistence.jdbc.password\" value=\"postgres\" /&gt;       &lt;!-- Database Dialect --&gt;       &lt;property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.PostgreSQLDialect\" /&gt;       &lt;!-- create / create-drop / update --&gt;       &lt;!-- - create: creates database from scratch using definitions --&gt;       &lt;!-- - update: try to update new attributes --&gt;       &lt;!-- - validate: verify if the entities are compatible with db tables --&gt;       &lt;property name=\"hibernate.hbm2ddl.auto\" value=\"update\" /&gt;       &lt;!-- Show SQL in console --&gt;       &lt;!-- Should be disabled in production --&gt;       &lt;property name=\"hibernate.show_sql\" value=\"false\" /&gt;       &lt;!-- Show SQL formatted --&gt;       &lt;property name=\"hibernate.format_sql\" value=\"true\" /&gt;     &lt;/properties&gt;    &lt;/persistence-unit&gt;  &lt;/persistence&gt;   Testes:      H2 Database: banco em memória.   &lt;!-- src/test/resources/META-INF/persistence.xml --&gt; &lt;persistence xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence              http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\" version=\"2.1\"&gt;    &lt;!-- transaction-type --&gt;   &lt;!-- - RESOURCE_LOCAL --&gt;   &lt;!-- - JTA --&gt;   &lt;persistence-unit name=\"com.dmenezesgabriel.jpa\" transaction-type=\"RESOURCE_LOCAL\"&gt;     &lt;!-- Framework used for JPA especification --&gt;     &lt;provider&gt;org.hibernate.jpa.HibernatePersistenceProvider&lt;/provider&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.User&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Phone&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Address&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Customer&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.EstablishmentResponsible&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Document&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Establishment&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.EstablishmentSegment&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.EstablishmentEvaluation&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.Product&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.ProductCategory&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.ProductType&lt;/class&gt;     &lt;class&gt;com.dmenezesgabriel.jpa.domain.entity.GuestCheckPad&lt;/class&gt;       &lt;properties&gt;       &lt;!-- Database Driver --&gt;       &lt;property name=\"javax.persistence.jdbc.driver\" value=\"org.h2.Driver\" /&gt;       &lt;!-- Database connection uri --&gt;       &lt;!-- \"jdbc:sgdb_name://host_address:port_number/database_name\" --&gt;       &lt;!-- - When using docker, host addres is the container name --&gt;       &lt;property name=\"javax.persistence.jdbc.url\" value=\"jdbc:h2:mem:test\" /&gt;       &lt;!-- Database User --&gt;       &lt;property name=\"javax.persistence.jdbc.user\" value=\"\" /&gt;       &lt;!-- Database Password --&gt;       &lt;property name=\"javax.persistence.jdbc.password\" value=\"\" /&gt;       &lt;!-- Database Dialect --&gt;       &lt;property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.H2Dialect\" /&gt;       &lt;!-- create / create-drop / update --&gt;       &lt;!-- - create: creates database from scratch using definitions --&gt;       &lt;!-- - update: try to update new attributes --&gt;       &lt;!-- - validate: verify if the entities are compatible with db tables --&gt;       &lt;property name=\"hibernate.hbm2ddl.auto\" value=\"create\" /&gt;       &lt;!-- Show SQL in console --&gt;       &lt;!-- Should be disabled in production --&gt;       &lt;property name=\"hibernate.show_sql\" value=\"false\" /&gt;       &lt;!-- Show SQL formatted --&gt;       &lt;property name=\"hibernate.format_sql\" value=\"true\" /&gt;     &lt;/properties&gt;    &lt;/persistence-unit&gt;  &lt;/persistence&gt;   pom.xml   &lt;!-- hibernate/pom.xml --&gt; &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- Organization --&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- organization/application url on the contrary br.com.domain --&gt;   &lt;groupId&gt;com.dmenezesgabriel&lt;/groupId&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!--  Project --&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- Artifacty ID must be unique within the group --&gt;   &lt;artifactId&gt;jpa&lt;/artifactId&gt;   &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;   &lt;name&gt;jpa&lt;/name&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- Project's Website --&gt;   &lt;!-- ==================================================================== --&gt;   &lt;url&gt;dmenezesgabriel.github.io&lt;/url&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- Projects properties --&gt;   &lt;!-- ==================================================================== --&gt;   &lt;properties&gt;     &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;     &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;     &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;   &lt;/properties&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- Project's dependencies --&gt;   &lt;!-- ==================================================================== --&gt;   &lt;dependencies&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;       &lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;       &lt;version&gt;5.8.2&lt;/version&gt;       &lt;scope&gt;test&lt;/scope&gt;     &lt;/dependency&gt;     &lt;!-- end::junit[] --&gt;     &lt;!-- tag::hibernate[] --&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.hibernate&lt;/groupId&gt;       &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;       &lt;version&gt;5.4.24.Final&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- end::hibernate[] --&gt;     &lt;!-- tag::oracle[] --&gt;     &lt;!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8 --&gt;     &lt;dependency&gt;       &lt;groupId&gt;com.oracle.database.jdbc&lt;/groupId&gt;       &lt;artifactId&gt;ojdbc8&lt;/artifactId&gt;       &lt;version&gt;21.1.0.0&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- end::oracle[] --&gt;     &lt;!-- tag::postgres[] --&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.postgresql&lt;/groupId&gt;       &lt;artifactId&gt;postgresql&lt;/artifactId&gt;       &lt;version&gt;42.3.3&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- end::postgres[] --&gt;     &lt;!-- tag::H2[] --&gt;     &lt;dependency&gt;       &lt;groupId&gt;com.h2database&lt;/groupId&gt;       &lt;artifactId&gt;h2&lt;/artifactId&gt;       &lt;version&gt;2.1.210&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- end::H2[] --&gt;     &lt;!-- tag::log4j[] --&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;       &lt;artifactId&gt;log4j-api&lt;/artifactId&gt;       &lt;version&gt;2.17.1&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;       &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;       &lt;version&gt;2.17.1&lt;/version&gt;     &lt;/dependency&gt;     &lt;!-- end::log4j[] --&gt;   &lt;/dependencies&gt;   &lt;!-- ==================================================================== --&gt;   &lt;!-- Project's build --&gt;   &lt;!-- ==================================================================== --&gt;   &lt;build&gt;     &lt;pluginManagement&gt;       &lt;plugins&gt;         &lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;           &lt;version&gt;3.1.0&lt;/version&gt;         &lt;/plugin&gt;         &lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;           &lt;version&gt;3.0.2&lt;/version&gt;         &lt;/plugin&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;           &lt;version&gt;3.8.0&lt;/version&gt;         &lt;/plugin&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;           &lt;version&gt;2.22.1&lt;/version&gt;         &lt;/plugin&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;           &lt;version&gt;3.0.2&lt;/version&gt;         &lt;/plugin&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;           &lt;version&gt;2.5.2&lt;/version&gt;         &lt;/plugin&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;           &lt;version&gt;2.8.2&lt;/version&gt;         &lt;/plugin&gt;         &lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;           &lt;version&gt;3.7.1&lt;/version&gt;         &lt;/plugin&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;           &lt;version&gt;3.0.0&lt;/version&gt;         &lt;/plugin&gt;       &lt;/plugins&gt;     &lt;/pluginManagement&gt;   &lt;/build&gt; &lt;/project&gt;   Compilar e executar   Instruções:   Description   General Sales Management System   Requirements      Openjdk 17   Hibernate   Docker   Docker Compose   Usage   Run:   # Optional docker-compose up -d pgadmin # Run docker-compose run maven --rm   Run tests:   # Run docker-compose run --rm maven-test   Recompile and Run:   # Run docker-compose run maven --rm   Bring down with volumes:   # Destroy database storage docker-compose down -v   Referências      tutorial-jpa  ","categories": [],
        "tags": [],
        "url": "/recipes/java-jpa-hibernate/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Java OOP Herança",
        "excerpt":"Hello, Java!   Superclasse   package com.java;  // Animal Superclass public class Animal {     private String move;     private String feed;      public String getMove() {         return move;     }      public void setMove(String move) {         this.move = move;     }      public String getFeed() {         return feed;     }      public void setFeed(String feed) {         this.feed = feed;     } }   Subclasses   package com.java;  // Bird subclass public class Bird extends Animal {     private String sing;      public String getSing() {         return sing;     }      public void setSing(String sing) {         this.sing = sing;     } }   package com.java;  // Dog subclass public class Dog extends Animal {     private String bark;      public String getBark() {         return bark;     }      public void setBark(String bark) {         this.bark = bark;     } }   Classe para testar a execução   package com.java;  // Testing class public class Test {     public static void main(String[] args) {         Animal animal = new Animal();         animal.setFeed(\"Every animal eats\");          System.out.println(animal.getFeed());          Dog dog = new Dog();         dog.setFeed(\"Dog eats dog food\");          System.out.println(dog.getFeed());      } }   Compilar e executar   # Compile find . -name \"*.java\" | xargs javac -d bin   # Run java -classpath bin com.java.view.Test   ","categories": [],
        "tags": [],
        "url": "/recipes/java-oop-heranca/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Redes",
        "excerpt":"Escaneamento de portas   sudo nmap 127.0.0.1 --allports -sV      s: serviço.   V: versão do sistema.  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-rede-portas/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Arquivos",
        "excerpt":"Escrever conteúdo em arquivo   echo \"Hello, World!\" &gt; hello.txt   Listar arquivos   ls -lha      l: visualizar como lista   h: legível para humanos   a: mostrar arquivos ocultos   Mostrar documentação do comando   man ls   Exibe o conteúdo de um arquivo   cat hello.txt   Exibe as primeiras linhas de um arquivo   head -n 10 /proc/cpfuinfo      n: Número de linhas   Exibe as últimas linhas de um arquivo   tail -n 10 /proc/cpfuinfo      n: Número de linhas   Exibe conteúdo de arquivo com navegação   less /var/log/messages   busca termos dentro de arquivos ou diretórios   sudo grep gabriel /var/log/auth.log   Copiar arquivo      To Copy    cp hello.txt teste.txt   Renomear ou mover arquivo      To Move    mv hello.txt hello.bak   Permissão pare executar      Change Mode    chmod +x &lt;nome_arquivo&gt;   Onde x faz referência ao x de e## x## ecute   Descompactar arquivos zip   unzip -tv &lt;nome_arquivo&gt;.zip      t: testa o arquivo antes de descompactar.   v: executa o comando de maneira verbosa.   (Des)empacota ou (des)comprime arquivos   tar -czvf arquivos.tgz *.txt      c: indica que o arquivo está sendo criado.   z: indica que o arquivo será comprimido com gzip.   v: executa o comando de maneira verbosa.   f: nome do arquivo que será gerado.  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-arquivos/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Configuração Bash Linux",
        "excerpt":"Configurações para bash no Windows.   .bashrc   # ~/.bashrc echo \"Hello ${USER}\" # --------------------------------------------------------------------------- # # Environment # --------------------------------------------------------------------------- # # Always require python environment export PIP_REQUIRE_VIRTUALENV=true # Don't write __pycache__, *.pyc and similar files export PYTHONDONTWRITEBYTECODE=1 # --------------------------------------------------------------------------- # # Java JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64 export JAVA_HOME # Maven MAVEN_HOME=~/Documents/programs/apache-maven-3.8.2 export MAVEN_HOME PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATH export PATH # --------------------------------------------------------------------------- # # NVM export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] &amp;&amp; printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\" # This loads nvm   ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-configuracao/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Diretórios",
        "excerpt":"Nomenclaturas   /   Pasta raiz, onde tudo começa. Equivalente ao C:\\ do Windows   /bin   Onde se localizam os binários que permitem que os usuários executem comandos.   /sbin   Similar a pasta /bin, porém contém comandos específicos para execução do super usuário.   /boot   Armazena os arquivos necessários para realizar o boot do sistema.   /dev   Dev é uma abreviação para devices, e no linux /dev armazena os dispositivos periféricos como mouses, impressoras, webcams e embarcados como HDs.   /home   Contém os diretórios de usuários, similar ao C:\\Users, cada usuário tem seu próprio diretório, por exempo /home/&lt;nome_usuario&gt;.   /lib e /lib64   São os diretórios onde ficam as bibliotecas de sistema para 64bits e 32bits, equivalentes a C:\\Windows\\System e C:\\Windows\\System32   /media e /mnt   São diretórios de “montagem” de volumes, como pendrives.   /opt   É um diretório opcional que pode ser utilizado para instalação alternativa de programas.   /proc   É um diretório virtual de informações do sistema, onde conseguimos obter informações sobre o processador, uso de memória, entre outros.   /root   Diretório do superusuário.   /run   Armazena os arquivos .pid dos processos em andamento.   /srv   Contém dados de serviços em execução.   /sys   Aqui encontraremos módulos para equipamentos USB em Kernels 2.6.x ou acima.   /tmp   Diretório de arquivos temporários, similar ao C:\\Windows\\Temp.   /usr   Onde ficam instalados os programas, equivalente ao C:\\Program Files   /var   Armazena diversas informações, por exemplo os arquivos que armazenam dados em um banco de dados.   /var/log   Contém logs de sistema.   Comandos   Mostrar diretório atual      Print Work Directory    pwd   Mudar de diretório      Change Directory    cd ~/Documents   Criar diretório      Make a directory    mkdir -p ~/Documents/repos      p: Cria o diretório pai, caso não exista.   Copiar diretórios com arquivos      To Copy    cp -rvp ~/Documents/repos ~/Documents/repos_bak      r: recursividade   p: mantém permissões   v: Executa o comando de maneira verbosa   Deletar diretórios vazios      Remove Directory    rmdir ~/Documents/repos   Deletar diretórios com arquivos      Remove    rm -r ~/Documents/repos      r: recursivo  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-diretorios/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Hello, World!",
        "excerpt":"Mostrar diretório atual   echo \"Hello, World!\"   Limpar tela   clear  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-hello-world/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Pacotes",
        "excerpt":"Atualiza pacotes disponíveis para download   sudo apt update   Baixa e atualiza automaticamente os pacotes disponíveis para download   sudo apt upgrade   Procura por pacotes   apt search conky   Instala pacotes   sudo apt install conky   Remove pacotes   sudo apt remove conky  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-pacotes/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Processos",
        "excerpt":"Um programa de computador é algo inerte, porém quando o executamos, ele se torna um processo.   Listar processos   ps aux      a: mostra processos de todos os usuários.   u: exibe lista detalhada contendo o dono do processo.   x: exibe processos que não estejam associados ao terminal.   Monitor de processos   top   Procurando por um processo específico   ps aux | grep &lt;nome_processo&gt;   Destruir processo   kill &lt;pid&gt;   Pausar processo   kill -SIGSTOP &lt;pid&gt;   Continuar processo pausado   kill -SIGCONT &lt;pid&gt;   Destruir processos por nome   killall &lt;nome_processo&gt;   Rodar processo em segundo plano   &lt;nome_processo&gt; &amp;  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-processos/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Bash Linux Usuários",
        "excerpt":"Nome do usuário atual   whoami   adiciona novo usuário   useradd   Trocar de usuário   su &lt;nome_usuario&gt;   Adiciona o usuário ao grupo sudo   usermod -aG sudo &lt;nome_usuario&gt;   Seu resultado pode ser visualizado no arquivo /etc/sudoers   Alterar senha do usuário   passwd   Modifica usuário   sudo usermod -aG &lt;nome_usuario&gt;   Cria grupo de permissões   sudo groupadd &lt;nome_grupo&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-shell-usuarios/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Steam",
        "excerpt":"Executar um jogo via linha de comando      Acessar o diretório do jogo:   cd ~/.steam/steam/steamapps/common/&lt;game_dir&gt;      Executar o jogo:   LD_LIBRARY_PATH=~/.steam/bin32/ ~/.steam/bin32/steam-runtime/run.sh ./&lt;gameexecutable&gt;  ","categories": [],
        "tags": [],
        "url": "/recipes/linux-steam-cmd/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Python datando arquivos .md",
        "excerpt":"Renomeando arquivos markdown no formato de posts para blogs estáticos Jekyll.   import datetime import logging import os import pathlib import re  logging.basicConfig(level=logging.INFO)  ignore_dirs = [\"venv\", \".ipynb\"] target_file_extensions = (\".md\", \".ipynb\") ignore_files = \"README\"   def date_file(base_dir):     counter = 0     for root, dirs, files in os.walk(base_dir):         for name in files:             if any(elem in root for elem in ignore_dirs):                 continue             # Check if already starts with date             match = re.match(r\"\\d{4}-\\d{2}-\\d{2}.*\", name)             if (                 name.endswith(target_file_extensions)                 and not name.startswith(ignore_files)                 and not match             ):                 file_path = os.path.join(root, name)                 file = pathlib.Path(file_path)                 file_creation_date = (                     datetime.datetime.fromtimestamp(file.stat().st_ctime)                     .date()                     .strftime(\"%Y-%m-%d\")                 )                 logging.info(\"File path: %s\" % file_path)                 logging.info(\"File creation date: %s\" % file_creation_date)                 new_file_path = os.path.join(                     root, file_creation_date + \"-\" + name                 )                 # Avoid overwrite files                 if os.path.isfile(new_file_path):                     logging.warning(\"File %s already exists\" % file_path)                     continue                 os.rename(file_path, new_file_path)                 logging.info(\"New file path: %s\" % new_file_path)                 counter += 1     logging.info(\"Files renamed %s\" % counter)   if __name__ == \"__main__\":     date_file(\".\")   ","categories": [],
        "tags": [],
        "url": "/recipes/python-arquivo-markdown-data/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "R Hello, World!",
        "excerpt":"   Hello, R!    Iniciando com a linguagem R!   print(\"Hello, World!\")   Linha de comando   Criação de ambiente virtual Python:   # Create environment py -3 -m venv ~/environments/rlang   # Activate environment source ~/environments/rlang/Scripts/activate   Instalação console interativo Radian:   pip install --upgrade pip pip install radian   Instalação de Pacotes:   # create local user library path (not present by default) dir.create(path = Sys.getenv(\"R_LIBS_USER\"), showWarnings = FALSE, recursive = TRUE) # install to local user library path install.packages(\"renv\", lib = Sys.getenv(\"R_LIBS_USER\"), repos = \"https://cran.rstudio.com/\")   Executar script R pela linha de comando:   # R code c://'Program Files'/R/R-4.1.3/bin/Rscript.exe -e \"cat('this is a test')\"   # R file c://'Program Files'/R/R-4.1.3/bin/Rscript.exe -e \"source('hello.R')\"   ","categories": [],
        "tags": [],
        "url": "/recipes/r-hello-world/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "R & Jupyterlab",
        "excerpt":"Script   Este script cria dois ambientes virtuais, um para a linguagem R e outro para a linguagem Python, instala o kernel do R no ambiente e roda o jupyterlab utilizando ./notebooks como pasta para armazenamento dos notebooks.   #!/bin/bash set -e  # Constants R_PATH=\"c://Program Files/R/R-4.1.3/bin/Rscript.exe\"  R_ENVIRONMENTS_PATH=~/renvironments PYTHON_ENVIRONMENTS_PATH=~/environments  ENVIRONMENT_NAME=\"r_jupyter_test\"  R_ENVIRONMENT_PATH=\"${R_ENVIRONMENTS_PATH}/${ENVIRONMENT_NAME}\" PYTHON_ENVIRONMENT_PATH=\"${PYTHON_ENVIRONMENTS_PATH}/${ENVIRONMENT_NAME}\"  # Test R installation echo \"========================================================================\" echo \"Testing R installation\" printf \"\\n\" \"${R_PATH}\" -e \"cat('Installation OK')\" printf \"\\n\"  # Create user lib if not exist echo \"========================================================================\" echo \"Creating user lib\" printf \"\\n\" \"${R_PATH}\" -e \"dir.create(path = Sys.getenv('R_LIBS_USER'), showWarnings = FALSE, recursive = TRUE)\" printf \"\\n\"  # Install renv - r virtual environments package echo \"========================================================================\" echo \"Install renv\" printf \"\\n\" \"${R_PATH}\" -e \"install.packages('renv', lib = Sys.getenv('R_LIBS_USER'), repos = 'https://cran.rstudio.com/')\" printf \"\\n\"  #  Create R virtual environment echo \"========================================================================\" echo \"Create renv\" printf \"\\n\" \"${R_PATH}\" -e \"renv::init(project='${R_ENVIRONMENT_PATH}')\" py -c \"import os; print(os.path.isdir('${R_ENVIRONMENT_PATH}'))\" printf \"\\n\"  #  Create Python virtual environment echo \"========================================================================\" echo \"Create venv\" printf \"\\n\" py -3 -m venv ${PYTHON_ENVIRONMENT_PATH} py -c \"import os; print(os.path.isdir('${PYTHON_ENVIRONMENT_PATH}'))\" ${PYTHON_ENVIRONMENT_PATH}/Scripts/python -m pip install --upgrade pip ${PYTHON_ENVIRONMENT_PATH}/Scripts/python -m pip install jupyterlab  # Install R kernel echo \"========================================================================\" echo \"Install r kernell\" printf \"\\n\" source ${PYTHON_ENVIRONMENT_PATH}/Scripts/activate &amp;&amp; \\ \"${R_PATH}\" -e \"renv::activate(project='${R_ENVIRONMENT_PATH}'); \\                 renv::install(project='${R_ENVIRONMENT_PATH}', \\                 packages=c('IRkernel', 'languageserver')); \\                 IRkernel::installspec(prefix='${PYTHON_ENVIRONMENT_PATH}'); \\                 renv::snapshot(type = 'all')\" printf \"\\n\"  # Run Jupyter echo \"========================================================================\" echo \"Run jupyterlab\" printf \"\\n\" source ${PYTHON_ENVIRONMENT_PATH}/Scripts/activate &amp;&amp; \\ jupyter lab --notebook-dir=\"./notebooks\"   ","categories": [],
        "tags": [],
        "url": "/recipes/r-jupyterlab/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Nomenclaturas",
        "excerpt":"SQL   Data Definition Language (DDL)   Comandos associado as estruturas dos dados.      CREATE   DROP   ALTER   RENAME   TRUNCATE   Data Manipulation Language (DML)   Comandos para modificar o conteudo das tabelas      INSERT   UPDATE   DELETE   Data Query language (DQL)   Comandos utilizados para realizar consultas      SELECT   Data Control language (DCL)   Comandos para conceder e remover permissoes a dados e operacoes      GRANT   REVOKE   Data Transaction Language (DTL)   Comandos para controle das transacoes do banco de dados.      COMMIT   ROLLBACK   SAVEPOINT   Constraints   Obrigatório, auxiliam manter a integridade da estrutura de armazenamento.      Evitam que uma tabela seja deletada caso hajam relacionamentos   Que sejam inseridos dados invalidos        Garante a integridade dos dados armazenados       NULL   NOT NULL   PRIMARY KEY   FOREIGN KEY   UNIQUE   DEFAULT   CHECK: validacoes   Nomenclatura           Tabelas:              T_SIGLASISTEMA_ENTIDADE       Singular       Maiuscula       Inicia-se com a letra T       3 Caracteres para Sigla do sistema       Underline(_) como separador                Colunas:              Singular       Minuscula                                      Tipo           Prefixo (2 caracteres)           Prefixo (3 caracteres)                                           identificador           id_           idt_                             Codigo           cd_           cod_                             Numero           nr_           num_                             Valor           vl_           val_                             Nome           nm_           nom_                             Data           dt_           dat_                             Descricao           ds_           des_                             Quantidade           qt_           qtd_                             Numero sequencial           sq_           seq_                             Indicador           in_           ind_                             Status           st_           sta_                             Observacao           ob_           obs_                             Texto extenso           tx_           txt_                                Constraint:                                  Tipo           Prefixo                                           Check           CK_                             unique           UN_                             Chave primaria           PK_                             Chave estrangeira           FK_                           Criação de entidades      Criar tabelas contendo campos, tipos de dados e tamanho, utilizando o comando CREATE TABLE   Criar as chaves primarias e demais constraints (exceto chaves estrangeiras) utilizando o comando alter table   Criar as chaves estrangeiras, utilizando alter table apos todas as tabelas, respectivas chaves estrangeiras e demais constraints  ","categories": [],
        "tags": [],
        "url": "/recipes/sql-nomenclaturas/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Vim",
        "excerpt":"Instalação   sudo apt install vim   Criar arquivo   vim file.txt   Modo de edição   Edição no ponto atual do cursor   Tecle i   Edição um carácter após o cursor   Tecle a   Edição no final de uma linha   Tecle A   Edição na linha posterior   Tecle o   Posicionar cursor no inicio da linha   Tecle ^   Copiar linha      Yank    Tecle yy   Copiar uma única palavra da linha   Tecle yw   Copiar da posição do cursor ao final da linha   Tecle y$   Copiar da posição do cursor ao inicio da linha   Tecle y^   Colar linha      Paste    Tecle p   Apagar linha      Delete    Tecle d   Apagar uma única palavra da linha   Tecle dw   Apagar da posição do cursor ao final da linha   Tecle d$   Apagar da posição do cursor ao inicio da linha   Tecle d^   Desfazer última alteração      Undo    Tecle u   Modo de comandos      Pressione ESC, caso esteja no modo de edição   salvar      Pressione :   Digite w   Tecle ENTER   para salvar e sair, digite wq   sair do editor      Pressione :   Digite q   Tecle ENTER   para sair sem salvar, digite q!   Habilitar número de linhas      Pressione :   Digite set nu   Tecle ENTER   Ir a determinada linha      Pressione :   Digite &lt;numero_linha&gt;   Tecle ENTER   Copiar número específico de linhas      Pressione :   Digite &lt;numero_linhas&gt;yy   Tecle ENTER   Apagar número específico de linhas      Pressione :   Digite &lt;numero_linhas&gt;dd   Tecle ENTER   Buscar palavra      Pressione /   Digite &lt;palavra&gt;   Tecle ENTER   n para ir a próxima ocorrência e N para voltar a anterior   Substituir      Pressione :   Digite %s&lt;texto_atual&gt;/&lt;novo_texto&gt;/gc        Tecle ENTER       g: global, ou seja, para todas ocorrências e não apenas a primeira.   c: pede confirmação.  ","categories": [],
        "tags": [],
        "url": "/recipes/vim/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      },{
        "title": "Configuração Bash Windows",
        "excerpt":"Configurações para bash no Windows.   .bashrc   # ~/.bashrc # --------------------------------------------------------------------------- # # Environment # --------------------------------------------------------------------------- # export PIPENV_IGNORE_VIRTUALENVS=1 export PYTHONDONTWRITEBYTECODE=1 export PIP_REQUIRE_VIRTUALENV=true export USER=$(whoami) export JDK_VERSION=\"17.0.1\" export MVN_VERSION=\"3.8.3\" # Fix Strange characters on jshell export TERM=cygwin # --------------------------------------------------------------------------- # # Directories # --------------------------------------------------------------------------- # alias docs=\"cd '/c/Users/${USER}/Documents'\" alias repos=\"cd '/c/Users/${USER}/Documents/repos'\" alias edoc=\"explorer '/c/Users/${USER}/Documents'\" alias erepos=\"explorer '/c/Users/${USER}/Documents/repos'\" # --------------------------------------------------------------------------- # # Python # --------------------------------------------------------------------------- # # Create new python virtual environment at ~/environments/&lt;current_folder_name&gt; alias nvenv='python -m  venv ~/environments/\"${PWD##*/}\"' # Activate python virtual environment at ~/environments/&lt;current_folder_name&gt; alias avenv='source ~/environments/\"${PWD##*/}\"/Scripts/activate' # --------------------------------------------------------------------------- # # Java # --------------------------------------------------------------------------- # # Java executable alias alias java=\"/c/'Program Files'/java/jdk-${JDK_VERSION}/bin/java.exe\" # Java Doc executable alias alias javadoc=\"/c/'Program Files'/java/jdk-${JDK_VERSION}/bin/javadoc.exe\" # Maven executable alias alias mvn=\"/c/Users/${USER}/Documents/Programs/apache-maven-${MVN_VERSION}/bin/mvn.cmd\"   ","categories": [],
        "tags": [],
        "url": "/recipes/windows-shell-configuracao/",
        "teaser": "/assets/images/fallback-teaser.jpeg"
      }]
